{"version":3,"sources":["components/layout/Header.js","components/buttons/Menu.js","constant/Menus.js","components/layout/ContentTitle.js","components/pages/Home.js","utils/StringUtil.js","components/buttons/ActionButtons.js","components/CrudRow.js","components/layout/InstantTable.js","constant/Url.js","components/pages/About.js","redux/actionCreators.js","utils/ComponentUtil.js","components/input/InputField.js","components/buttons/ActionButton.js","components/Label.js","components/Message.js","components/pages/Login.js","components/buttons/Tab.js","components/input/ComboBox.js","components/pages/DashboardMain.js","constant/TimelineConstant.js","components/layout/GridComponent.js","components/card/Card.js","components/pages/Timeline.js","redux/types.js","components/pages/Dashboard.js","components/layout/Footer.js","components/ChatList.js","components/pages/ChatRoom.js","utils/EntityConfigurations.js","components/input/DropdownItem.js","components/input/InputDropdown.js","components/input/InputFile.js","components/input/InputFileMultiple.js","components/pages/EntityForm.js","components/pages/EntityList.js","components/pages/Management.js","App.js","redux/shopReducer.js","utils/HardCodedEntites.js","redux/userReducer.js","redux/transactionReducer.js","redux/managementReducer.js","redux/reducers.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","react_default","a","createElement","className","title","Component","logoUrl","Menu","userLink","divisionInfo","division","name","loggedUser","id","appIcon","src","style","width","renderedMenus","icon","url","menus","map","e","onClick","handleMenuCLick","activeCode","code","key","Link","to","LOGOUT","ContentTitle","description","Home","document","setMenuCode","layout_ContentTitle","content","index","uniqueId","string","Date","getUTCMilliseconds","beautifyNominal","val","nominal","result","length","zero","i","isNonNullArrayWithIndex","array","ActionButtons","buttonsData","buttonData","status","concat","objectSpread","stringUtil","text","CrudRow","handleEdit","identifier","handleDelete","values","Array","newValues","value","CS","RS","colspan","rowspan","push","trStyle","borderTop","actionButton","buttons_ActionButtons","disabled","valign","CrudRow_Cells","Cells","rowSpan","colSpan","InstantTable","rows","tableStyle","row","components_CrudRow","baseImageUrl","About","padding","fontFamily","margin","layout_InstantTable","apiBaseUrl","usedHost","apiEntityBaseUrl","apiAccount","apiAdmin","_byId","getElementById","createNavButtons","totalButton","currentPage","Math","ceil","min","max","InputField","handleKeyup","onKeyUp","target","onChange","type","placeholder","inputField","checked","fontSize","ActionButton","Label","Message","state","timer","intervalId","update","clearInterval","console","log","setState","endMessage","withTimer","setInterval","messageText","msgStyle","realtime","floor","progress","textAlign","Login","username","password","showMessageLoginFailed","handleUsername","handlePassword","doLogin","main","validateLoginStatus","loginStatus","history","message","loginFailed","components_Message","components_Label","input_InputField","buttons_ActionButton","withRouter","Tab","tabsData","autoColumns","repeat","gap","display","gridTemplateColumns","borderBottom","tabData","active","React","ComboBox","handleOnChange","options","defaultValue","option","DashboardMain","onDivisionListChange","divisionId","selectDivision","divionOptions","divisions","forEach","input_ComboBox","month","day","GridComponent","items","cols","gridAutoColumns","verticalAlign","item","Card","titleStyle","height","backgroundRepeat","backgroundColor","backgroundImage","backgroundSize","Timeline","selectedMonth","getMonth","inputYearValue","getFullYear","activeId","detailView","detailEvents","selectedDay","calendarData","days","month_now","begin","week","dayCount","info","begin_old","year_now","input_month","date_info","running_month","running_year","filterDayId","filterMonthId","dateFormId","entity_Name","entity_Prop","setSelectedMonth","changeInputYear","createTable","r","getEventByDate","year","app","getEventDetail","events","event","date","getDate","entityName","propName","dateID","setDateElementId","updateFields","focus","loadCalendar","filterStr","fillDay","setCalendar","updated","doSetCalendar","diff_year","abs","monthCount","less","current_month","endMonth","begin_month","b","prevMonth","m","nextMonth","fillInfo","timeLineConstant","refresh","doPrevMonth","prev","begin_prev","findBegin","switch_","doNextMonth","next","begin_old_","totalday","M","begin_prev_","D","val2","data","getYear","now","strDate","dateAcceptableForHtmlInput","addZero","Val","Min","N","String","MinStr","ValLength","Diff","clear","begin_new","week_","day_","isNow","d","setElementByAttr","_this2","selectedYear","totalCalendarData","element","minHeight","marginBottom","eventList","card_Card","detail","layout_GridComponent","participant","location","done","eventCard","connect","managementState","userState","dispatch","y","startLoading","payload","meta","actions","Dashboard","getButtonsData","menu","getDivisons","pages_DashboardMain","pages_Timeline","buttons_Tab","Footer","version","ChatItem","admin","sender","senderComponent","marginLeft","float","color","ChatRoom","messages","sendChatMessage","alert","handleMessage","response","localStorage","getItem","storeChatMessageLocally","entities","changeUsername","getMessages","userAlias","shopState","divisionConfig","fieldNames","lableName","formData","inputType","reffEntity","idField","displayField","sectionConfig","programConfig","eventConfig","positionConfig","memberConfig","DropdownItem","hover","onHover","unHover","onMouseLeave","onMouseOver","InputDropdown","hoverIndex","onBlur","onSelect","dataValue","dropdownList","dropdownComponent","input_DropdownItem","onFocus","InputFile","base64Data","file","referer","callback","reader","FileReader","readAsDataURL","files","onload","onerror","error","componentUtil","assertThisInitialized","removeImage","displayImage","trim","accept","InputFileMultiple","handleAddMoreFile","addMoreImage","inputFields","inputFilesData","inputFileData","input_InputFile","base64","includes","inputId","EntityForm","managedEntity","formValues","dropdownValues","selectedEntities","base64DataMultiple","validateEntity","entity","formDataItem","getFormDataItemStartWith","arrayOfValues","split","resultValue","updatedValue","join","handleSubmit","updateEntity","entityConfig","focusActiveId","updateSelectedEntity","removeManagedEntity","populateDropdown","entityname","fieldname","fieldvalue","request","fieldName","fieldValue","getEntitiesWithCallback","onKeyUpDynamicDropdown","populateDropdownValues","currentDropdownValue","getFormDataItem","getSelectedDropdownItem","formDataList","currentValue","handleRemoveImage","handleChangeBase64Image","handleChangeBase64MultipleImage","propNameRaw","removeElementAtPosition","handleRemoveMultipleImage","newArrayValue","selectFromDynamicDropdown","currentDropdownList","selectedOption","displayPropName","handleStaticDropdownChange","entityExist","actionButtons","formFields","parentPropName","valueAsObject","objectPropName","inputComponent","input_InputDropdown","valueSplit","imagesData","_loop","valueSplitItem","input_InputFileMultiple","requested","filter","limit","fieldsFilter","EntityList","orderBy","orderType","window","confirm","getEntityById","getHeaderNames","headers","headerName","toUpperCase","goToPage","page","orderObject","entitiesData","totalData","config","getEntityInPage","setOrderBy","createFilterInputs","inputs","input","handleFilterChange","valueDay","valueMonth","valueYear","inputDay","inputMonth","inputYear","orderButton","fontWeight","rowValues","_loop2","j","fieldItem","entityProp","object","entityValue","href","alt","imgName","dateStr","toDateString","opt","fixButtonData","_loop3","navButtons","paddingTop","entityTable","pages_EntityForm","Management","entityList","loadEntityManagement","getEntities","checkIfCurrentMenuName","flag","newRecord","isNewRecord","ref","callbackHandleUpdate","pages_EntityList","action","exacts","contains","App","detailMode","menuCode","loading","loadingPercentage","requestId","enableShopping","mainAppUpdated","setDetailMode","setEnableShopping","performLogout","requestAppId","endLoading","msg","percentage","setItem","refreshLogin","additionalMenus","authenticated","loginComponent","pages_Login","performLogin","loginAttempt","loadingComponent","setMenus","layout_Header","cart","buttons_Menu","Switch","Route","exact","path","render","renderProps","pages_Home","pages_ChatRoom","pages_About","pages_Dashboard","pages_Management","client_default","topics","onMessage","client","clientRef","layout_Footer","loginKey","user","initState","catalogData","categories","suppliersData","getTime","reducer","arguments","undefined","currentProduct","loadedSupplier","suppliers","referrer","updatedMenus","loggedIn","JSON","stringify","sessionData","Division","removeItem","productFlowStock","productFlowStocks","transactionData","successTransaction","customersData","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","transactionYears","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","managementReducer","initialState","commonAuthorizedHeader","Content-Type","getEntitiesWithCallbackMiddleware","store","fetch","method","body","then","json","parse","newAction","assign","catch","err","finally","param","updateEntityMiddleware","debug","getEntityByIdMiddleware","getEntityListMiddleware","entitie","getMessagesMiddleware","sendChatMessageMiddleware","updateCartMiddleware","storeChatMessageLocallyMiddleware","removeManagedEntityMiddleware","requestAppIdMiddleware","getProductStocksMiddleware","loadMore","getProductSalesDetailMiddleware","getEventByDateMiddleware","selectDivisionMiddleware","getDivisionsMiddleware","resetProductStocksMiddleware","resetCustomersMiddleware","resetProductsMiddleware","resetSuppliersMiddleware","resetPurchaseTransactionMiddleware","getSupplierListMiddleware","performLogoutMiddleware","Promise","all","_ref","_ref2","slicedToArray","responseJson","logoutSuccess","performLoginMiddleware","_ref3","_ref4","loginSuccess","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","pair","return","refreshLoginStatusMiddleware","getAllProductCategoriesMiddleware","loadMoreSupplierMiddleware","parap","removeEntityMiddleware","getProductDetailMiddleWare","getProductListMiddleware","configureStore","createStore","applyMiddleware","Root","es","HashRouter","src_App_0","Boolean","hostname","match","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9264cd03.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../css/Header.css' \r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleClick = ()=> {\r\n            \r\n        }\r\n    }\r\n\r\n    render(){ \r\n        return (\r\n            <div className=\"App-header\">\r\n                {this.props.title}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport '../../css/Menu.css'\r\nimport '../../css/Common.css'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nconst logoUrl = \"http://localhost:50084/Asset/Images/transparent.png\";\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n        let userLink = \"\";\r\n        let divisionInfo = null;\r\n        if (this.props.division) {\r\n            divisionInfo = <div className=\"fill\" >{this.props.division.name} </div>;\r\n        }\r\n\r\n        if (this.props.loggedUser != null) {\r\n            userLink = <li id=\"user-link\">\r\n                <div className=\"fill\" >{\"Welcome, \" + this.props.loggedUser.name} </div>\r\n                {divisionInfo}\r\n            </li>\r\n        }\r\n\r\n        let appIcon = <li><img src={logoUrl} style={{ width: '90%' }} /></li>;\r\n\r\n        let renderedMenus = [{\r\n            icon: true,\r\n            url: logoUrl\r\n        }];\r\n\r\n\r\n        if (this.props.menus != null) {\r\n            renderedMenus = this.props.menus;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"side-menu\" >\r\n                < ul className=\"menu-ul \" >\r\n                    {appIcon}\r\n                    {userLink}\r\n                    {\r\n                        renderedMenus.map(\r\n                            e => {\r\n                                if (e.url == \"#\") {\r\n                                    return (<li onClick={() => this.props.handleMenuCLick(e)} className={this.props.activeCode == e.code ? \"active\" : \"\"} key={e.name}\r\n                                        id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                            to=\"#\" ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                    )\r\n                                }\r\n                                return (<li className={this.props.activeCode == e.code ? \"menu-active\" : \"\"} key={e.name}\r\n                                    id={e.name}> <Link key={e.name} className=\"App-link\"\r\n                                        to={e.url} ><div className=\"fill\" >{e.name} </div></Link></li >\r\n                                )\r\n                            }\r\n                        )\r\n                    } </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","export const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const SUPPLIERLIST = \"supplierlist\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Content.css'\r\n\r\nclass ContentTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = this.props.title ? this.props.title : \"\";\r\n        let description = this.props.description ? this.props.description : \"\";\r\n        return (\r\n            <div className=\"content-title\">\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentTitle;","import React, { Component } from 'react'\r\nimport '../../css/Home.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nconst logoUrl = \"http://localhost:50084/Asset/Images/mpi.png\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mahasiswa Pencinta Islam\";\r\n        this.props.setMenuCode(menus.HOME);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title=\"Welcome!\" description=\r\n                    {this.props.content} />\r\n                <div className=\"article-content\">\r\n                    <h2 >Admin Console Mahasiswa Pencinta Islam</h2>\r\n                    <img src={logoUrl} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tlet nominal = \"\" + val;\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"...\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport '../../css/Button.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ActionButtons extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let className = \"action-button-wrapper\";\r\n        if(this.props.className){\r\n            className += \" \"+this.props.className;\r\n        }\r\n        return (\r\n            <div style={this.props.style ? this.props.style : {}} className={className}  >\r\n                {this.props.buttonsData.map(buttonData => {\r\n                    let className = \"action-button rounded\";\r\n                    if (buttonData.status != null) {\r\n                        className =\r\n                            className.concat(\" \").concat(buttonData.status).concat(\" \").concat(buttonData.className);\r\n                    }\r\n                    return (\r\n                        <button style={{...buttonData.style}} className={className} key={\"btnKey-\" + stringUtil.uniqueId()} onClick={buttonData.onClick}>{buttonData.text}</button>\r\n                    )\r\n                })}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React, { Component } from 'react'\r\nimport ActionButtons from './buttons/ActionButtons';\r\nimport * as stringUtil from '../utils/StringUtil'\r\n\r\nclass CrudRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleEdit = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleEdit(this.props.identifier);\r\n            }\r\n        }\r\n        this.handleDelete = () => {\r\n            if (this.props.handleEdit) {\r\n                this.props.handleDelete(this.props.identifier);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        const defaultRowColSpan = 1;\r\n        if (null == values) {\r\n            values = new Array();\r\n        } else {\r\n            let newValues = new Array();\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (this.props.CS || this.props.RS) {\r\n                    let colspan = stringUtil.isNonNullArrayWithIndex(this.props.CS, i) ?\r\n                        this.props.CS[i] : defaultRowColSpan;\r\n                    let rowspan = stringUtil.isNonNullArrayWithIndex(this.props.RS, i) ?\r\n                        this.props.RS[i] : defaultRowColSpan;\r\n                    newValues.push({ value: value, colspan: colspan, rowspan: rowspan });\r\n                } else\r\n                    newValues.push({ value: value });\r\n            }\r\n            values = newValues;\r\n        }\r\n\r\n        let trStyle = this.props.style ? this.props.style : {\r\n            borderTop: 'solid 1px gray',\r\n        };\r\n        let actionButton = <td style={trStyle}>\r\n            <ActionButtons buttonsData={[\r\n                {\r\n                    id: \"k-btn-edit-\" + this.props.identifier,\r\n                    status: 'warning',\r\n                    onClick: this.handleEdit,\r\n                    text: \"Edit\"\r\n                },\r\n                {\r\n                    id: \"k-btn-dlt-\" + this.props.identifier,\r\n                    status: 'danger',\r\n                    onClick: this.handleDelete,\r\n                    text: \"Delete\"\r\n                }\r\n            ]} />\r\n        </td>;\r\n\r\n        if (this.props.disabled == true) {\r\n            actionButton = null;\r\n            trStyle = this.props.style ? this.props.style : {};\r\n        }\r\n      \r\n        return (\r\n            <tr style={trStyle} key={stringUtil.uniqueId()}\r\n                valign={this.props.valign}>\r\n                <Cells values={values} trStyle={trStyle} />\r\n                {actionButton}</tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst Cells = (props) => {\r\n\r\n    return props.values.map(value => {\r\n        return (\r\n            <td key={\"td-key-\" + stringUtil.uniqueId()} id={\"td-\" + stringUtil.uniqueId()} style={props.trStyle} rowSpan={value.rowspan} colSpan={value.colspan}>\r\n                {value.value}\r\n            </td>\r\n        )\r\n    });\r\n}\r\n\r\nexport default CrudRow;","import React, { Component } from 'react'\r\nimport CrudRow from '../CrudRow';\r\nimport '../../css/Common.css'\r\nimport '../../css/InstantTable.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass InstantTable extends Component {\r\n    constructor(props) { super(props) }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if (this.props.rows) { rows = this.props.rows; }\r\n        let className = \"table\";\r\n        let tableStyle = this.props.style ? this.props.style : {};\r\n        if (this.props.className) {\r\n            className += \" \" + this.props.className;\r\n        }\r\n        return (\r\n            <table style={tableStyle} className={className}><tbody>\r\n                {rows.map(row => {\r\n                    let disabled = row.disabled == false? false:true;\r\n                  \r\n                    \r\n                    return (\r\n                        <CrudRow\r\n                            style={row.style}\r\n                            valign={this.props.valign ? this.props.valign : \"top\"}\r\n                            RS={row.RS}\r\n                            identifier={row.identifier ? row.identifier : \"0000\"}\r\n                            handleEdit={row.handleEdit}\r\n                            handleDelete={row.handleDelete}\r\n                            CS={row.CS}\r\n                            values={row.values ? row.values : []}\r\n                            key={stringUtil.uniqueId()}\r\n                            disabled={disabled}\r\n                        />\r\n                    )\r\n                })}\r\n            </tbody></table>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default InstantTable;","export const baseImageUrl =\"http://localhost:8080//universal-good-shop/WebAsset/Shop1/Images/\";\r\nexport const baseResUrl =\"http://localhost:8080//universal-good-shop/res/img/\";","import React, { Component } from 'react'\r\nimport '../../css/About.css'\r\nimport '../../css/Common.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport * as url from '../../constant/Url'\r\nimport '../../css/Common.css'\r\nimport ContentTitle from '../layout/ContentTitle'\r\nconst logoUrl = \"http://localhost:50084/Asset/Images/asp.png\";\r\nclass About extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"About Us\";\r\n        this.props.setMenuCode(menus.ABOUT);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section-container about-section  \" >\r\n                <ContentTitle title=\"About Us\" />\r\n                <div className=\" abount-content\" style={{\r\n                    padding: '5px',\r\n                    width: '90%',\r\n                    fontFamily: 'Consolas', margin: '5px'\r\n                }}>\r\n                    <InstantTable\r\n                        rows={[\r\n                            { values: [\"Name\", \"Organization Management Admin\"] },\r\n                            { values: [\"Version\", \"1.0.0\"] },\r\n                            { values: [\"Description\", \"managing your organization activities effectively\"] },\r\n\r\n\r\n                        ]} />\r\n                    <h2>Powered By</h2>\r\n                    <img style={{ width: '50%' }} src={logoUrl} />\r\n                </div></div>\r\n \r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import * as types from './types'\r\nconst hostCloud = \"/Web/\";\r\nconst hostLocal = \"http://localhost:50084/Web/\";\r\nconst usedHost = hostCloud;\r\nconst apiBaseUrl = usedHost + \"Public.aspx/\"\r\nconst apiEntityBaseUrl = usedHost + \"Management.aspx/\"\r\nconst apiAccount = usedHost + \"Account.aspx/\"\r\nconst apiAdmin = usedHost + \"Admin.aspx/\"\r\nconst apiTransaction = usedHost + \"api/transaction/\";\r\n\r\nexport const resetProductStocks = () => {\r\n    return { type: types.RESET_PRODUCT_STOCKS, payload: {}, meta: { type: types.RESET_PRODUCT_STOCKS } };\r\n}\r\n\r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\nexport const resetSuppliers = () => {\r\n    return { type: types.RESET_SUPPLIERS, payload: {}, meta: { type: types.RESET_SUPPLIERS } };\r\n}\r\nexport const resetCustomers = () => {\r\n    return { type: types.RESET_CUSTOMERS, payload: {}, meta: { type: types.RESET_CUSTOMERS } };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"Add\") : apiEntityBaseUrl.concat(\"Update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"Get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"Get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"Get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getProductStocks = (name, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_STOCKS,\r\n        payload: { product: { name: name } },\r\n        meta: {\r\n            app: app, type: types.GET_PRODUCT_STOCKS,\r\n            url: apiTransaction.concat(\"stocks\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl.concat(\"GenerateAppId\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const sendChatMessage = (message, username, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SEND_MESSAGE,\r\n        payload: {\r\n            value: message,\r\n            username: username\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.SEND_MESSAGE,\r\n            url: apiAdmin.concat(\"sendmessage\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getEventByDate = (month, year, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_EVENTS_BY_DATE,\r\n        payload: { year: year, month: month },\r\n        meta: {\r\n            app: app, type: types.GET_EVENTS_BY_DATE,\r\n            url: apiAdmin.concat(\"Event\")\r\n        }\r\n    };\r\n}\r\nexport const selectDivision = (id, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.SELECT_DIVISION,\r\n        payload: { divisionId: id },\r\n        meta: {\r\n            app: app, type: types.SELECT_DIVISION, url: apiAccount.concat(\"SetDivision\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductListTrx = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_PRODUCT_LIST_TRX,\r\n        payload: {\r\n            entity: \"product\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST, url: apiEntityBaseUrl.concat(\"Get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCustomerList = (name, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.FETCH_CUSTOMER_LIST,\r\n        payload: {\r\n            entity: \"customer\", filter: { page: 0, limit: 10, fieldsFilter: { name: name } }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_CUSTOMER_LIST, url: apiEntityBaseUrl.concat(\"Get\"), app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetPurchaseTransaction = () => ({\r\n    type: types.RESET_TRX_PURCHASE,\r\n    payload: {},\r\n    meta: { type: types.RESET_TRX_PURCHASE }\r\n})\r\nexport const submitPurchaseTransaction = (request, app) => {\r\n    app.startLoading(true);\r\n    console.log(\"Submit Supply Purchase...\")\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_PURCHASE,\r\n        payload: {\r\n            customer: request.customer,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_PURCHASE, url: apiTransaction.concat(\"purchase\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const submitSupplyTrx = (request, app) => {\r\n    console.log(\"Submit Supply Trx...\")\r\n    app.startLoading(true);\r\n    let requested = {\r\n        type: types.SUBMIT_TRX_SUPPLY,\r\n        payload: {\r\n            supplier: request.supplier,\r\n            productFlows: request.productFlows\r\n        },\r\n        meta: {\r\n            app: app, type: types.SUBMIT_TRX_SUPPLY, url: apiTransaction.concat(\"supply\")\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getStockInfo = (stockId, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_STOCK_INFO,\r\n        payload: { productFlow: { id: stockId } },\r\n        meta: {\r\n            app: app, type: types.GET_STOCK_INFO, url: apiTransaction.concat(\"stockinfo\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"Logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n///ok\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {\r\n            user: { username: username, password: password }\r\n        },\r\n        meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"Login\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\n//ok\r\nexport const getDivisons = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.GET_DIVISIONS,\r\n        payload: {\r\n\r\n        },\r\n        meta: { type: types.GET_DIVISIONS, url: apiAccount.concat(\"Divisions\"), app: app }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getAllProductCategories = () => ({\r\n    type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n    payload: {\r\n        entity: \"category\",\r\n        filter: {\r\n            limit: 0,\r\n            page: 0,\r\n            orderBy: null,\r\n            orderType: null,\r\n            fieldsFilter: {}\r\n        }\r\n    },\r\n    meta: {\r\n        type: types.FETCH_PRODUCT_CATEGORIES_ALL,\r\n        url: apiEntityBaseUrl.concat(\"Get\")\r\n    }\r\n})\r\n\r\nexport const getSupplierList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.FETCH_SUPPLIER_LIST,\r\n        payload: {\r\n            entity: \"supplier\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_SUPPLIER_LIST,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\nexport const getProductList = (request, app) => {\r\n    app.startLoading(request.withStock == true);\r\n    let requested = {\r\n        type: types.FETCH_PRODUCT_LIST,\r\n        payload: {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 10,\r\n                page: request.page,\r\n                fieldsFilter: {\r\n                    name: request.name,\r\n                    withStock: request.withStock\r\n                },\r\n                orderBy: request.orderby,\r\n                orderType: request.ordertype\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_LIST,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n\r\n    if (request.categoryId != null) {\r\n        requested.payload.filter.fieldsFilter[\"category,id[EXACTS]\"] = request.categoryId;\r\n    }\r\n\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getProductDetail = (code, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.FETCH_PRODUCT_DETAIL,\r\n        payload: {\r\n\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                contains: false,\r\n                fieldsFilter: {\r\n                    code: code,\r\n                    withStock: true,\r\n                    withSupplier: true\r\n                }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.FETCH_PRODUCT_DETAIL,\r\n            url: apiBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const loadMoreSupplier = (page, productId, referrer) => {\r\n    referrer.props.app.startLoading();\r\n    return {\r\n        type: types.LOAD_MORE_SUPPLIER,\r\n        payload: { filter: { page: page, fieldsFilter: { \"productId\": productId } } },\r\n        meta: {\r\n            type: types.LOAD_MORE_SUPPLIER,\r\n            url: apiBaseUrl.concat(\"moresupplier\"),\r\n            referrer: referrer\r\n        }\r\n    }\r\n}\r\n\r\n","export const _byId = (id) => { return document.getElementById(id) }\r\n\r\nexport const clearFields = (...ignore) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n    let withIgnore = ignore != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore)\r\n            for (let y = 0; y < ignore.length; y++)\r\n                if (inputs[i].id == ignore[y]) continue loop;\r\n\r\n        if (inputs[i].type == \"text\") inputs[i].value = \"\";\r\n        if (inputs[i].type == \"number\") inputs[i].value = 0;\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback){\r\n\tconst reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n    \talert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (_byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array(); \r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton  ? totalButton  : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton  ) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton -1 \r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\n\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyup = (e) => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(e.target.value, this.props.id);\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            if (this.props.type == \"date\") {\r\n                this.handleKeyup(e);\r\n            }\r\n            if (this.props.id && this.props.type == \"checkbox\") {\r\n                this.props.onChange(this.props.id);\r\n            }\r\n            if (this.props.onChange && this.props.id) {\r\n                this.props.onChange();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let type = this.props.type ? this.props.type : \"text\";\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let name = this.props.name ? this.props.name : \"\";\r\n        let style = this.props.style ? this.props.style : {};\r\n\r\n        let inputField = <input style={style}\r\n            className=\"rounded\"\r\n            name={name}\r\n            key={\"KEY-input-\" + this.props.id}\r\n            id={this.props.id}\r\n            type={type}\r\n            onKeyUp={this.handleKeyup}\r\n            placeholder={placeholder}\r\n            checked={this.props.checked}\r\n            onChange={this.onChange}\r\n           \r\n        />;\r\n\r\n        if (this.props.disabled == true) {\r\n            inputField = <input style={style}\r\n                className=\"rounded\"\r\n                onChange={this.onChange}\r\n                name={name} key={\"KEY-input-\" + this.props.id}\r\n                checked={this.props.checked}\r\n                id={this.props.id}\r\n                type={type} onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n               \r\n                disabled />\r\n        }\r\n\r\n        if (type == \"textarea\") {\r\n            inputField = <textarea style={style}\r\n                className=\"rounded\"\r\n                name={name}\r\n                key={\"KEY-input-\" + this.props.id}\r\n                id={this.props.id}\r\n                type={type}\r\n                onKeyUp={this.handleKeyup}\r\n                placeholder={placeholder}\r\n                onChange={this.onChange}\r\n                checked={this.props.checked} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field \">\r\n                {inputField}\r\n                {this.props.type == \"radio\" || this.props.type == \"checkbox\" ? <span style={{ fontSize: '0.9em' }}>\r\n\r\n                    {this.props.text} </span> : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\n\r\nclass ActionButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = () => {\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"action-button rounded\";\r\n        if(this.props.status!= null ){\r\n            className=className.concat(\" \").concat(this.props.status);\r\n        }\r\n        return (\r\n            <div >\r\n                <button style={{...this.props.style}} className={className} id={this.props.id} onClick={this.onClick}>{this.props.text}</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ActionButton;","import React, {Component} from 'react'\r\nimport '../css/Input.css'\r\n\r\nclass Label extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onClick = () =>{\r\n            if(this.props.onClick){\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let style = this.props.style?this.props.style:{};\r\n        let className = \"input-field \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n        if(this.props.onClick){\r\n            className+=\" clickable\";\r\n        }\r\n        return(\r\n            <div onClick={this.onClick} style={style} className={className}>\r\n                <label>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react'\r\nimport '../css/Common.css'\r\nimport '../css/Message.css'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {\r\n            let progress = Math.floor( this.props.progress);\r\n            msgStyle = {\r\n                width:progress + \"%\",\r\n                textAlign: 'left'\r\n            };\r\n            className+=\" rounded\";\r\n            messageText =  <span className=\"loader\">{this.props.progress + \"%\"}</span>          \r\n        }\r\n        return (\r\n            <div style={msgStyle} className={className} >{messageText}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Login.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport Label from '../Label';\r\nimport Message from '../Message'\r\nimport { withRouter } from 'react-router';\r\nimport ContentTitle from '../layout/ContentTitle';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            showMessageLoginFailed: false\r\n        }\r\n\r\n\r\n\r\n        this.handleUsername = (value) => {\r\n            this.setState({ username: value });\r\n        }\r\n        this.handlePassword = (value) => {\r\n            this.setState({ password: value });\r\n        }\r\n\r\n        this.doLogin = () => {\r\n\r\n            console.log(\"u:\", this.state.username, \",p:\", this.state.password);\r\n            this.props.doLogin(document.getElementById(\"username-field\").value,\r\n                document.getElementById(\"password-field\").value, this.props.main);\r\n        }\r\n\r\n        this.endMessage = () => {\r\n            this.setState({ showMessageLoginFailed: false })\r\n        }\r\n\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.props.setMenuCode(menus.LOGIN);\r\n        document.title = \"Login\";\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        // if(this.props.loginAttempt == false && this.state.showMessageLoginFailed == false){\r\n        //     this.setState({showMessageLoginFailed:true})\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        let message = <p>\r\n            {this.props.loginFailed ? <Message endMessage={this.endMessage} type=\"failed\" text=\"Login Failed\" /> : \"\"}\r\n        </p>\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                < ContentTitle title=\"Login Page\" />\r\n                {message}\r\n                <div className=\"login-container\">\r\n                    <Label text=\"Username\" />\r\n                    <InputField id=\"username-field\" onKeyUp={this.handleUsername} />\r\n                    <Label text=\"Password\" />\r\n                    <InputField id=\"password-field\" type=\"password\" onKeyUp={this.handlePassword} />\r\n                    <ActionButton style={{margin:'5px'}} id=\"btn-login\" status=\"submit\" onClick={this.doLogin} text=\"Login\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport '../../css/Tab.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass Tab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let tabsData = this.props.tabsData ? this.props.tabsData : [];\r\n\r\n        let autoColumns = \"5% \"+(\"max-content \".repeat(tabsData.length ))+\" auto\";\r\n        return (\r\n            <div className=\"tab-container\" style={{\r\n                ...this.props.style,\r\n                width:'auto',\r\n                gap:'0px',\r\n                display: 'grid',\r\n                gridTemplateColumns: autoColumns\r\n            }} >\r\n                 <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n                {tabsData.map(tabData => {\r\n                    return <div key={stringUtil.uniqueId()} className={tabData.active ? \"tab-element tab-item-active rounded-top\" : \"tab-element tab-item\"} onClick={tabData.onClick ? tabData.onClick : () => { }}>\r\n                        {tabData.text}\r\n                    </div>\r\n                })}\r\n                <div style={{width:'100%', borderBottom:'solid 1px lightgray'}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\n\r\nclass ComboBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleOnChange = (e) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(e.target.value); \r\n            }\r\n            else {\r\n                console.log(\"Not supported\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value) {\r\n            _byId(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let options = [];\r\n        if (this.props.options) {\r\n            options = this.props.options;\r\n        } \r\n        return (\r\n            <div className=\"input-field \">\r\n                <select value={this.props.defaultValue ? this.props.defaultValue : \"\"} className=\"rounded\" id={this.props.id}\r\n                    onChange={this.handleOnChange} >\r\n                    {options.map(\r\n                        option => {\r\n                            return <option key={\"opt_\" + stringUtil.uniqueId()} value={option.value} >{option.text}</option>\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboBox;","import  React  from 'react'\r\nimport '../../css/Common.css'\r\nimport ComboBox from '../input/ComboBox';\r\n\r\nclass DashboardMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            divisionId:null\r\n        }\r\n    }\r\n\r\n    onDivisionListChange = (value) => {\r\n        this.setState({divisionId:value});\r\n        this.props.selectDivision(value);\r\n    }\r\n    \r\n    divionOptions = () => {\r\n        let options = [];\r\n        let divisions = this.props.divisions? this.props.divisions : [];\r\n\r\n        divisions.forEach(division => {\r\n            options.push({\r\n                value: division.id,\r\n                text: division.name\r\n            })\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render(){\r\n \r\n        const division = this.props.division;\r\n        let divisionId = this.state.divisionId;\r\n        if(this.props.division){\r\n            divisionId = this.props.division.id;\r\n        }\r\n\r\n        return(\r\n            <div >\r\n                <p>Login Sebagai</p>\r\n                <ComboBox defaultValue={divisionId} onChange={this.onDivisionListChange} options={this.divionOptions()} />\r\n\r\n                <p>Current Selection:</p>\r\n                <p>{division?division.name:\"\"}</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default DashboardMain;","export  const month = [\r\n    { name: \"Januari\", day: 31, text:\"Januari\",value:\"1\" },\r\n    { name: \"Februari\", day: 28, text:\"Februari\",value:\"2\" },\r\n    { name: \"Maret\", day: 31, text:\"Maret\",value:\"3\" },\r\n    { name: \"April\", day: 30, text:\"April\",value:\"4\" },\r\n    { name: \"Mei\", day: 31 , text:\"Mei\",value:\"5\"},\r\n    { name: \"Juni\", day: 30, text:\"Juni\",value:\"6\" },\r\n    { name: \"Juli\", day: 31 , text:\"Juli\",value:\"7\"},\r\n    { name: \"Agustus\", day: 31 , text:\"Agustus\",value:\"8\"},\r\n    { name: \"September\", day: 30 , text:\"September\",value:\"9\"},\r\n    { name: \"Oktober\", day: 31 , text:\"Oktober\",value:\"10\"},\r\n    { name: \"November\", day: 30 , text:\"November\",value:\"11\"},\r\n    { name: \"Desember\", day: 31 , text:\"Desember\",value:\"12\"},\r\n];","import React, { Component } from 'react'\r\n\r\nclass GridComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        let items = [];\r\n        if (this.props.items) {\r\n            items = this.props.items;\r\n        }\r\n        const width = this.props.width?this.props.width : \"auto \";\r\n        const repeat = this.props.cols ? this.props.cols : items.length;\r\n        const gridAutoColumns = width.repeat(repeat);\r\n\r\n       \r\n        return (\r\n            <div style={{ ...this.props.style, display: 'grid',   verticalAlign: 'middle', gridTemplateColumns: gridAutoColumns }} >\r\n                {items.map(item => {\r\n                    return item;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GridComponent;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Card.css'\r\n\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = () => {\r\n            if (this.props.onClick) {\r\n                this.props.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let titleStyle = {height:'auto'}\r\n        if (this.props.icon) {\r\n            titleStyle = {\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundColor: 'white',\r\n                backgroundImage: \"url(\" + this.props.icon + \")\",\r\n                backgroundSize: '200px 160px',\r\n                \r\n            }\r\n        }\r\n\r\n        let className= \"card \";\r\n        if(this.props.className){\r\n            className+=\" \"+this.props.className;\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.onClick} style={this.props.style} className={className}>\r\n                <div className=\"card-title  \" style={titleStyle}>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Timeline.css'\r\nimport * as timeLineConstant from '../../constant/TimelineConstant'\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport ComboBox from '../input/ComboBox';\r\nimport InputField from '../input/InputField'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport GridComponent from '../layout/GridComponent';\r\nimport Card from '../card/Card';\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMonth: new Date().getMonth(),\r\n            inputYearValue: new Date().getFullYear(),\r\n            activeId: \"\",\r\n            detailView: false,\r\n            detailEvents: [],\r\n            selectedDay: 0\r\n        }\r\n\r\n        this.calendarData = [];\r\n        this.days = [\"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\", \"Ahad\"];\r\n\r\n\r\n        this.month_now = 7;// 0;\r\n        //let this.begin = { week: 2, day: 1, dayCount: 31 };\r\n        this.begin = { week: 1, day: 3, dayCount: 31, info: \"\" };\r\n        this.begin_old = { week: 0, day: 0, dayCount: 0, info: \"\" };\r\n        this.year_now = 1945;\r\n        //let month_label = document.getElementById(\"month\");\r\n        //let year_label = document.getElementById(\"year\"); \r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n        this.running_month = 7;\r\n        this.running_year = 1945;\r\n        this.filterDayId = 0;\r\n        this.filterMonthId = 0; this.dateFormId = 0;\r\n        this.entity_Name = 0; this.entity_Prop = 0; this.dateFormId = 0;\r\n\r\n\r\n        this.setSelectedMonth = (val) => {\r\n            this.setState({ selectedMonth: val })\r\n        }\r\n        this.changeInputYear = (val, id) => {\r\n            this.setState({ inputYearValue: val, activeId: id });\r\n        }\r\n\r\n        this.createTable = () => {\r\n            //console.log(\"BUAT this.tabel\"); \r\n            let calendarData = [];\r\n            for (let r = 1; r <= 6; r++) {\r\n                for (let i = 1; i <= 7; i++) {\r\n                    calendarData.push({ day: i, week: r });\r\n                }\r\n            }\r\n            this.calendarData = calendarData;\r\n        }\r\n\r\n        this.getEventByDate = (month, year) => {\r\n\r\n            this.props.getEventByDate(month, year, this.props.app);\r\n        }\r\n\r\n        this.getEventDetail = (day) => {\r\n            let events = this.props.events;\r\n            let result = [];\r\n\r\n            events.forEach(event => {\r\n                let date = new Date(event.date);\r\n                if (date.getDate() == day) {\r\n                    result.push(event);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    initEntity(entityName, propName, dateID) {\r\n        this.entity_Name = entityName;\r\n        this.entity_Prop = propName;\r\n        console.log(\"entity Name and prop \", this.entity_Name, this.entity_Prop);\r\n        this.setDateElementId(dateID);\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(!this.props.division){\r\n            return;\r\n        }\r\n        console.log(\"CALENDAR ROW:\", this.calendarData);\r\n        this.updateFields();\r\n        if (_byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.division)\r\n            this.loadCalendar();\r\n    }\r\n\r\n    setDateElementId(dateID) {\r\n        console.log(\"Set date id field \", dateID);\r\n        this.dateFormId = dateID;\r\n        let filterStr = \"filter-\" + dateID;\r\n        this.filterDayId = (filterStr + \".day\");\r\n        this.filterMonthId = (filterStr + \".month\");\r\n        this.dateFormId = (filterStr + \".year\");\r\n    }\r\n\r\n    updateFields() {\r\n        this.input_month = document.getElementById(\"input_month\");\r\n        this.date_info = document.getElementById(\"date-info\");\r\n    }\r\n\r\n    loadCalendar() {\r\n        this.updateFields();\r\n        this.createTable();\r\n        this.begin_old = this.begin;\r\n        this.begin = this.fillDay(this.month_now, true, this.begin);\r\n\r\n        this.input_month.value = new Date().getMonth() + 1;\r\n        this.setState({ inputYearValue: new Date().getFullYear() });\r\n        this.setCalendar();\r\n        this.setState({ updated: new Date() })\r\n    }\r\n    setCalendar() {\r\n        this.doSetCalendar();\r\n    }\r\n\r\n    doSetCalendar() {\r\n        console.log(\"==start==\");\r\n\r\n        this.running_month = this.input_month ? this.input_month.value - 1 : new Date().getMonth();\r\n        this.running_year = this.state.inputYearValue ? this.state.inputYearValue : new Date().getFullYear();\r\n        let diff_year = +Math.abs(this.running_year - this.year_now);\r\n        // alert(\"diff_year year:\" + diff_year);\r\n        let monthCount = 0;\r\n        if (diff_year > 0)\r\n            monthCount = (11 - this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (+this.running_month);\r\n        else\r\n            monthCount = this.running_month - this.month_now;\r\n        let less = false;\r\n        if (this.running_year - this.year_now > 0) {\r\n            less = false;\r\n        } else if (this.running_year - this.year_now < 0) {\r\n            less = true;\r\n        } else {\r\n            if (this.running_month - this.month_now > 0) {\r\n                less = false;\r\n            } else {\r\n                less = true;\r\n            }\r\n        }\r\n        monthCount = Math.abs(monthCount);\r\n        //console.log(\"kurang dari: \", less);\r\n        let current_month = this.month_now;\r\n        let endMonth = (monthCount + this.month_now);\r\n        if (monthCount <= 0)\r\n            return;\r\n        if (!less)\r\n        ////console.log(\"month now\",this.month_now,\"diff_year\",monthCount,\"to\",to);\r\n        {\r\n            for (let m = this.month_now + 1; m <= endMonth + 1; m++) {\r\n                if (current_month > 11) {\r\n                    current_month = 0;\r\n\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.nextMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"month\",current_month,\"this.running_year\",this.year_now);\r\n                current_month++;\r\n            }\r\n        } else if (less) {\r\n            let pastMonthCount = (this.month_now) + (diff_year > 1 ? ((diff_year - 1) * 12) : 0) + (11 - this.running_month);\r\n            endMonth = (pastMonthCount + this.month_now);\r\n            //console.log(\"month now\", this.month_now, \"diff_year\", monthCount, \"from\", to);\r\n            let begin_month = this.month_now;\r\n            for (let b = endMonth + 1; b >= begin_month + 1; b--) {\r\n                if (current_month < 0) {\r\n                    current_month = 11;\r\n                }\r\n                this.month_now = current_month;\r\n                let end = this.prevMonth();\r\n                if (end) {\r\n                    break;\r\n                }\r\n                ////console.log(\"b\",b,\"month\",current_month);\r\n                current_month--;\r\n            }\r\n\r\n        }\r\n\r\n        this.fillInfo();\r\n        console.log(\"==end==\")\r\n    }\r\n\r\n    fillInfo() {\r\n        if (this.date_info)\r\n            this.date_info.value = timeLineConstant.month[this.month_now].name + \" \" + this.year_now;\r\n        this.refresh();\r\n\r\n    }\r\n\r\n    clearDateFilter() {\r\n        // this.detail(\"\", \"\", \"\");\r\n    }\r\n\r\n    detail(day, month, year) {\r\n        console.log(\"DETAIL: \", day, month, year);\r\n        let events = this.getEventDetail(+day);\r\n        this.setState({ detailView: true, detailEvents: events, selectedDay: day })\r\n    }\r\n\r\n    prevMonth() {\r\n        this.setState({ activeId: \"xx\" })\r\n        return this.doPrevMonth(false);\r\n    }\r\n\r\n    doPrevMonth(prev) {\r\n        this.month_now--;\r\n        if (prev) {\r\n            this.running_month--;\r\n        }\r\n        if (this.month_now < 0) {\r\n            this.month_now = 11;\r\n            this.year_now--;\r\n            if (prev) {\r\n                this.running_month = 11;\r\n                this.running_year--;\r\n            }\r\n        }\r\n        let begin_prev = this.findBegin(this.begin_old, this.begin_old.dayCount);\r\n\r\n        this.begin_old = {\r\n            week: begin_prev.week,\r\n            day: begin_prev.day,\r\n            dayCount: begin_prev.dayCount,\r\n        }\r\n        let switch_ = this.fillDay(this.month_now, false, begin_prev);\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n    }\r\n\r\n    nextMonth() {\r\n        this.setState({ activeId: \"xx\" })\r\n        return this.doNextMonth(false);\r\n    }\r\n\r\n    refresh() {\r\n        this.setState({ updated: new Date(), selectedMonth: this.month_now + 1, inputYearValue: this.year_now })\r\n    }\r\n\r\n    doNextMonth(next) {\r\n        console.log(\"NEXT\")\r\n        this.month_now++;\r\n        if (next) {\r\n            this.running_month++;\r\n        }\r\n        if (this.month_now > 11) {\r\n            this.month_now = 0;\r\n            this.year_now++;\r\n            if (next) {\r\n                this.running_month = 0;\r\n                this.running_year++;\r\n            }\r\n        }\r\n\r\n        let switch_ = this.fillDay(this.month_now, true, this.begin);\r\n        this.begin_old = {\r\n            week: this.begin.week,\r\n            day: this.begin.day,\r\n            dayCount: this.begin.dayCount,\r\n        }\r\n        this.begin = {\r\n            week: switch_.week,\r\n            day: switch_.day,\r\n            dayCount: switch_.dayCount,\r\n        }\r\n        this.refresh();\r\n        return switch_.info == \"NOW\";\r\n\r\n    }\r\n\r\n    findBegin(begin_old_, totalday) {\r\n        let M = this.month_now - 1;\r\n        if (M < 0) {\r\n            M = 11;\r\n        }\r\n        let day = begin_old_.day;\r\n        let week = 6;\r\n        let begin_prev_ = {\r\n            week: 0,\r\n            day: 0,\r\n            dayCount: timeLineConstant.month[M].day\r\n        }\r\n\r\n        for (let D = totalday; D >= 0; D--) {\r\n            if (day <= 0) {\r\n                day = 7;\r\n                week--;\r\n            }\r\n            day--;\r\n        }\r\n        begin_prev_.week = week;\r\n        begin_prev_.day = day + 1;\r\n        return begin_prev_;\r\n    }\r\n\r\n    setElementByAttr(val, val2, day) {\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            let data = this.calendarData[i];\r\n\r\n            if (data.week == val && data.day == val2) {\r\n                if (new Date().getDate() == day &&\r\n                    new Date().getMonth() == this.month_now &&\r\n                    new Date().getYear() + 1900 == this.year_now) {\r\n\r\n                    console.log(\"NOW\", i);\r\n                    this.calendarData[i].now = true;\r\n                } else {\r\n                    console.log(\"NOT NOW\", i);\r\n                    this.calendarData[i].now = false;\r\n                }\r\n                this.calendarData[i].text = day;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNewEvent(day, month, year) {\r\n\r\n        let strDate = this.dateAcceptableForHtmlInput(day, month, year);\r\n        document.getElementById(this.dateFormId).value = strDate;\r\n    }\r\n\r\n    dateAcceptableForHtmlInput(day, month, year) {\r\n        return year + \"-\" + this.addZero(month, 10) + \"-\" + this.addZero(day, 10);\r\n    }\r\n\r\n    addZero(Val, Min) {\r\n        let N = new String(Val);\r\n        let MinStr = new String(Min);\r\n\r\n        let ValLength = N.length;\r\n        let MinLength = MinStr.length;\r\n        let Diff = MinLength - ValLength;\r\n        for (let i = 1; i <= Diff; i++) {\r\n            N = new String(\"0\").concat(N);\r\n        }\r\n\r\n        return N;\r\n    }\r\n\r\n    clear() {\r\n\r\n        for (let i = 0; i < this.calendarData.length; i++) {\r\n            this.calendarData[i].text = \"\";\r\n        }\r\n\r\n        timeLineConstant.month[1].day = 28 + (+this.year_now % 4 == 0 ? 1 : 0);\r\n    }\r\n\r\n    fillDay(current_month, next, begin) {\r\n        this.clear();\r\n        let begin_new = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let begin_old_ = {\r\n            week: begin.week,\r\n            day: begin.day,\r\n            dayCount: begin.dayCount\r\n        };\r\n        let week_ = begin_new.week;\r\n        let begin_week = week_;\r\n        if (begin_new.week > 1 && begin_new.day > 1) {\r\n            week_ = 1;\r\n            begin_week = 1;\r\n        }\r\n        let day_ = begin_new.day;\r\n        let begin_day = day_;\r\n        let isNow = this.running_month == current_month && this.running_year == this.year_now;\r\n        //  console.log(\"isNow\", isNow,this.running_month,'=',current_month, this.running_month == current_month,this.running_year,'=',this.year_now, this.running_year == this.year_now)\r\n        for (let d = 1; d <= timeLineConstant.month[current_month].day; d++) {\r\n            if (day_ > 7) {\r\n                day_ = 1;\r\n                week_++;\r\n            }\r\n            if (isNow) {\r\n                this.setElementByAttr(week_, day_, d);\r\n            }\r\n            day_++;\r\n        }\r\n        begin_new.week = week_ >= 5 ? 2 : 1;\r\n        begin_new.day = day_;\r\n        begin_new.dayCount = timeLineConstant.month[current_month].day;\r\n        //console.log(\"old\", begin_old_.day, begin_old_.week);\r\n        //console.log(\"   \");\r\n        //console.log(\"new\", begin_new.day, begin_new.week);\r\n        this.fillInfo();\r\n        if (isNow) {\r\n            // this.detail(null, (+this.running_month + 1), this.running_year);\r\n            begin_new.info = \"NOW\";\r\n            this.getEventByDate(this.running_month + 1, this.running_year);\r\n        } else {\r\n            begin_new.info = \"SOME-DAY\";\r\n        }\r\n\r\n\r\n\r\n        return begin_new;\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        //validate division\r\n        if(this.props.division == null){\r\n            return <h2>Silakan Pilih Badan Pengurus MPI</h2>\r\n        }\r\n\r\n        let selectedYear = this.state.inputYearValue;\r\n\r\n        let totalCalendarData = this.days.map(day => {\r\n            return ({ text: day, title: true })\r\n        })\r\n\r\n        this.calendarData.forEach(element => {\r\n            totalCalendarData.push(element);\r\n        });\r\n\r\n        let calendarData = totalCalendarData.map(\r\n            data => {\r\n\r\n                if (data.text == null || data.text == \"\") {\r\n                    return <div></div>\r\n                }\r\n\r\n                let style = { width: '80%', minHeight: '150px', marginBottom: '15px' };\r\n\r\n                if (data.title == true) {\r\n                    return (<div>{data.text}</div>)\r\n                }\r\n\r\n                if (data.now == true) {\r\n                    style = {\r\n                        ...style,\r\n                        backgroundColor: 'lightgreen'\r\n                    }\r\n                }\r\n\r\n                let events = this.getEventDetail(+data.text);\r\n                let i = 0;\r\n                let eventList = events.map(event => {\r\n                    i++;\r\n                    if (i <= 3) {\r\n                        \r\n                        return <p key={\"EVT_\" + i}>{event.name}</p>\r\n                    } else if (i == 4) {\r\n                        return <ActionButton onClick={() => { }} text={\"detail \" + i} />\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n\r\n                });\r\n                console.log(data.text, \"EVENTS: \", events);\r\n\r\n                return (\r\n                    <Card style={style} title={data.text}\r\n                        onClick={() => this.detail(data.text, this.state.selectedMonth, this.year_now)}\r\n                        content={eventList}\r\n                    />\r\n                )\r\n            }\r\n        )\r\n\r\n\r\n        let content = null;\r\n\r\n        if (this.state.detailView == false) {\r\n            content = <div id=\"calendar-wrapper\">\r\n\r\n                <GridComponent cols={3} style={{\r\n                    textAlign: 'center', width: '400px'\r\n                }} items={[\r\n                    <ComboBox id=\"input_month\" defaultValue={this.state.selectedMonth} onChange={this.setSelectedMonth}\r\n                        options={timeLineConstant.month} />,\r\n                    <InputField type=\"number\" id=\"input_year\" value={selectedYear} onKeyUp={this.changeInputYear} />,\r\n                    <ActionButton onClick={(e) => this.setCalendar()} text={\"Go\"} />,\r\n                    <ActionButton onClick={(e) => this.doPrevMonth(true)} text={\"Prev\"} />,\r\n                    <input disabled className=\"form-control\" id=\"date-info\" />,\r\n                    <ActionButton onClick={(e) => this.doNextMonth(true)} text={\"Next\"} />\r\n                ]}\r\n\r\n                />\r\n                <p></p>\r\n                <p></p>\r\n                <GridComponent cols={7} items={calendarData} />\r\n            </div>;\r\n        } else {\r\n            let detailEvents = [];\r\n            if (this.state.detailEvents)\r\n                this.state.detailEvents.forEach(event => {\r\n\r\n                    let content = <div>\r\n                        <p>{\"Date:\" + event.date}</p>\r\n                        <p>{\"Info:\" + event.info}</p>\r\n                        <p>{\"Participant:\" + event.participant}</p>\r\n                        <p>{\"Location:\" + event.location}</p>\r\n                        <p>{\"Status:\" + (event.done ? \"done\" : \"not done\")}</p>\r\n                    </div>\r\n\r\n                    let eventCard = <Card title={event.name}\r\n                        content={content}\r\n                    />\r\n                    detailEvents.push(eventCard);\r\n                });\r\n\r\n            if(detailEvents.length == 0){\r\n                detailEvents = [\r\n                    <div>No Agenda.</div>\r\n                ]\r\n            }\r\n            \r\n            content = <div className=\"detail-timeline\">\r\n                <h2>Detail View Day: {this.state.selectedDay}</h2>\r\n                <div>\r\n                    <ActionButton onClick={() => { this.setState({ detailView: false }) }} text=\"Back\" />\r\n                    <GridComponent cols={4} items={detailEvents} />\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>TimeLine {this.props.division.name +\" \"+ this.state.inputYearValue}</h2>\r\n                {content}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        events: state.managementState.events,\r\n        division: state.userState.division\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEventByDate: (m, y, app) => dispatch(actions.getEventByDate(m, y, app)),\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Timeline)) ","export const FETCH_PRODUCT_LIST = \"fetch_product_list\";\r\nexport const FETCH_PRODUCT_DETAIL= \"fetch_product_detail\";\r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\";\r\nexport const FETCH_SUPPLIER_LIST = \"fetch_supplier_list\";\r\nexport const LOAD_MORE_SUPPLIER = \"load_more_supplier\";\r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";\r\nexport const GET_STOCK_INFO = \"get_stock_info\";\r\nexport const SUBMIT_TRX_PURCHASE = \"submit_purchase\";\r\nexport const SUBMIT_TRX_SUPPLY = \"submit_supply\";\r\nexport const RESET_TRX_PURCHASE = \"reset_purchase\";\r\nexport const FETCH_CUSTOMER_LIST = \"fetch_cust_list\";\r\nexport const FETCH_PRODUCT_LIST_TRX = \"fetch_product_list\";\r\nexport const GET_DIVISIONS = \"GET_DIVISIONS\";\r\nexport const SELECT_DIVISION = \"SET_DIVISION\";\r\nexport const GET_EVENTS_BY_DATE = \"GET_EVENTS_BY_DATE\";\r\n\r\nexport const RESET_SUPPLIERS = \"reset_suppliers\";\r\nexport const RESET_PRODUCTS = \"reset_products\";\r\nexport const RESET_PRODUCT_STOCKS = \"RESET_PRODUCT_STOCKS\";\r\nexport const RESET_CUSTOMERS = \"RESET_CUSTOMERS\";\r\nexport const GET_PRODUCT_STOCKS = \"get_product_stocks\";\r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\";\r\nexport const SEND_MESSAGE = \"send_message\";\r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Dashboard.css'\r\nimport * as menus from '../../constant/Menus'\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport Tab from '../buttons/Tab';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport DashboardMain from './DashboardMain';\r\nimport Timeline from './Timeline'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: \"home\"\r\n        }\r\n\r\n        this.setMenuCode = (code) => {\r\n            this.setState({ menu: code });\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n        this.getDivisons = () => {  \r\n            this.props.getDivisons( this.props.app);  \r\n        }\r\n\r\n        this.selectDivision = (divisionId) => {\r\n            this.props.selectDivision(divisionId, this.props.app);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        if (this.props.loginStatus != true)\r\n            return;\r\n        this.props.setMenuCode(menus.DASHBOARD);\r\n        document.title = \"Dashboard\";\r\n\r\n        this.getDivisons();\r\n    }\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                text: \"Home\",\r\n                active: this.state.menu == \"home\",\r\n                onClick: () => {this.setMenuCode('home') }\r\n            },\r\n            {\r\n                text: \"Time Line\",\r\n                active: this.state.menu == \"timeline\", \r\n                onClick: () => {this.setMenuCode('timeline') }\r\n            } \r\n        ];\r\n    }\r\n \r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const buttonsData = this.getButtonsData();\r\n\r\n        let content = null;\r\n        switch (this.state.menu) {\r\n            case 'home':\r\n                content = <DashboardMain  division={this.props.division} \r\n                    selectDivision={this.selectDivision} \r\n                    divisions={this.props.divisions} />\r\n                break;\r\n            case \"timeline\":\r\n                    content = <Timeline app={this.props.app} />\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<div className=\"section-container\">\r\n            <ContentTitle title={\"Admin Page\"}\r\n                description=\"management organisasi\" />\r\n            <div className=\"management-container\">\r\n                <Tab tabsData={buttonsData} />\r\n                {content}\r\n            </div>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        divisions: state.userState.divisions,\r\n        division: state.userState.division,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDivisons: ( app) => dispatch(actions.getDivisons( app)),\r\n    selectDivision: (divisionId, app) => dispatch(actions.selectDivision(divisionId, app))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)); ","import React, { Component } from 'react';\r\nimport '../../css/Footer.css'\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let date = new Date().getFullYear();\r\n\r\n        return (\r\n            <div className=\"App-footer\">\r\n               BPP MPI Divisi Media {date+\" powered by React Js \"+React.version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react' \r\nimport Label from './Label';\r\nimport '../css/Chat.css'\r\nimport GridComponent from './layout/GridComponent';\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        let chats = this.props.messages ? this.props.messages : [];\r\n        let chatRows = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = chats[i];\r\n            chatRows.push(\r\n                <ChatItem message={chat} username={this.props.username} />\r\n            )\r\n        }\r\n        return (\r\n            <GridComponent cols={1} items={chatRows} />)\r\n    }\r\n}\r\n\r\nconst ChatItem = props => {\r\n    let className = \"chat-item rounded paper-shadow  \" + (props.message.admin == 1 ? \" admin \" : \"user\");\r\n    let username = \"\";\r\n    if (props.username) {\r\n        username = \" [\" + props.username + \"]\";\r\n    }\r\n    let sender = props.message.admin == 1 ? \"Admin\" : \"You\" + username;\r\n    let senderComponent = <span>\r\n        {sender}<span style={{ marginLeft: '11px', fontSize: '0.7em', float: 'right' }} >{props.message.date}</span>\r\n    </span>\r\n    return (\r\n        <div className={className}>\r\n            <Label style={{ fontSize: '0.8em', color: 'black' }} text={senderComponent} />\r\n            <Label text={props.message.text} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport InputField from '../input/InputField';\r\nimport ActionButton from '../buttons/ActionButton';\r\nimport SockJsClient from 'react-stomp';\r\nimport ChatList from '../ChatList';\r\nimport ContentTitle from '../layout/ContentTitle';\r\nimport Label from '../Label';\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass ChatRoom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages: null, username: null, activeId: null }\r\n        this.sendChatMessage = () => {\r\n            if (!_byId(\"input-msg\").value) {\r\n                alert(\"Message must not be null\");\r\n                return;\r\n            }\r\n            this.props.sendChatMessage(_byId(\"input-msg\").value, this.state.username, this.props.app);\r\n            _byId(\"input-msg\").value = \"\";\r\n        }\r\n\r\n        this.handleMessage = (response) => {\r\n            console.log(\"Responses handleMessage: \", response.code);\r\n            console.log(\"LOCAL STORAGE:\", localStorage.getItem(\"requestId\"))\r\n            if (response.code != localStorage.getItem(\"requestId\")) {\r\n                return;\r\n            }\r\n            this.props.storeChatMessageLocally(response.entities);\r\n            // this.setState({ messages: response.entities });\r\n        }\r\n\r\n        this.changeUsername = (value, id) => {\r\n            this.setState({ username: value, activeId: id });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.setMenuCode('chatroom');\r\n        document.title = \"Chat Room\";\r\n        this.props.getMessages(this.props.app);\r\n        if (this.props.userAlias) {\r\n            this.setState({ username: this.props.userAlias })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.activeId && _byId(this.state.activeId)) {\r\n            _byId(this.state.activeId).focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userAlias = this.props.userAlias ? this.props.userAlias : \"\";\r\n        let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\r\n        let localHost = \"http://localhost:8080/universal-good-shop/\";\r\n        const usedHost = localHost;\r\n        return (\r\n            // <div className=\"section-container\">\r\n            //     <ContentTitle title=\"What Do You Feel?\" description=\r\n            //         {\"Identified as [\" + this.state.username + \"]\"} />\r\n            //     <InputField\r\n            //         value={userAlias}\r\n            //         onKeyUp={this.changeUsername}\r\n            //         id=\"input-username\"\r\n            //         placeholder=\"identify your name\" />\r\n            //     <div style={{ textAlign: 'left' }} id=\"chat-room\">\r\n\r\n            //         <div className=\"chat-container\"  >\r\n            //             <ChatList username={this.state.username} messages={this.props.messages} />\r\n            //         </div>\r\n\r\n            //         <GridComponent style={{ width: '50%', textAlign: 'right' }} items={[\r\n            //             <InputField style={{ width: '130%' }} type=\"textarea\" placeholder=\"input message\" id=\"input-msg\" />,\r\n            //             <ActionButton style={{ margin: '5px' }} status=\"success\" onClick={this.sendChatMessage} text=\"send\" />\r\n\r\n            //         ]} />\r\n\r\n            //         <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/messages']}\r\n            //             onMessage={(msg) => { this.handleMessage(msg) }}\r\n            //             ref={(client) => { this.clientRef = client }} />\r\n            //     </div>\r\n            // </div>\r\n            <ContentTitle title=\"under construction\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        messages: state.shopState.messages,\r\n        userAlias: state.shopState.userAlias\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    sendChatMessage: (message, username, app) => dispatch(actions.sendChatMessage(message, username, app)),\r\n    storeChatMessageLocally: (messages) => dispatch(actions.storeMessageLocally(messages)),\r\n    getMessages: (app) => dispatch(actions.getMessageList(app))\r\n\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatRoom)","export const divisionConfig = {\r\n    title: \"Badan Pengurus\",\r\n    entityName: \"division\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\", lableName: \"Nama\" },\r\n        { name: \"description\" }, { name: \"institution.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama BPD\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"Deskripsi BPD\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Division Insitusi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"institution.name\",\r\n            reffEntity: \"Institution\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sectionConfig = {\r\n    title: \"Divisi\",\r\n    entityName: \"section\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"division.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n\r\n        {\r\n            lableName: \"BPD\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"division.name\",\r\n            reffEntity: \"division\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const programConfig = {\r\n    title: \"Program Kerja\",\r\n    entityName: \"program\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" }\r\n        ,\r\n        { name: \"section.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Proker\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi Proker\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\nexport const eventConfig = {\r\n    title: \"Kegiatan\",\r\n    entityName: \"event\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"info\" },\r\n        { name: \"date\", type: \"date\" },\r\n        { name: \"location\" },\r\n        { name: \"program.name\" },\r\n        { name: \"participant\" },\r\n        {\r\n            name: \"done\", type: \"staticDropdown\", options: [\r\n                { text: \"Done\", value: 1 },\r\n                { text: \"UnDone\", value: 0 }\r\n            ]\r\n        }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Kegiatan\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Waktu Kegiatan\",\r\n            inputType: \"date\",\r\n            name: \"date\"\r\n        },\r\n        {\r\n            lableName: \"Info Kegiatan\",\r\n            inputType: \"textarea\",\r\n            name: \"info\"\r\n        }, {\r\n            lableName: \"Lokasi Kegiatan\",\r\n            inputType: \"text\",\r\n            name: \"location\"\r\n        },\r\n        {\r\n            lableName: \"Nama Program\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"program.name\",\r\n            reffEntity: \"program\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Status Kegiatan\",\r\n            inputType: \"staticDropDown\",\r\n            name: \"done\",\r\n            options: [\r\n                { text: \"Done\", value: 1 },\r\n                { text: \"UnDone\", value: 0 }\r\n            ]\r\n        },\r\n        {\r\n            lableName: \"Peserta\",\r\n            inputType: \"number\",\r\n            name: \"participant\"\r\n        },\r\n    ]\r\n}\r\n\r\nexport const positionConfig = {\r\n    title: \"Posisi\",\r\n    entityName: \"position\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"description\" },\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\nexport const memberConfig = {\r\n    title: \"Anggota\",\r\n    entityName: \"member\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" },\r\n        { name: \"position\" },\r\n        { name: \"section\" },\r\n        { name: \"description\" }\r\n\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Nama Anggota\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Posisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"position.name\",\r\n            reffEntity: \"position\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Nama Divisi\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"section.name\",\r\n            reffEntity: \"section\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Deskripsi\",\r\n            inputType: \"textarea\",\r\n            name: \"name\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============OLD STUFF==============//\r\n\r\n/**\r\n * SAMPLE\r\n */\r\n\r\nexport const productConfig = {\r\n    title: \"Product\",\r\n    entityName: \"product\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"code\" },\r\n        { name: \"description\" }, { name: \"unit.name\" },\r\n        { name: \"price\", type: \"number\" }, { name: \"category.name\" },\r\n        { name: \"imageUrl\", type: \"imageMultiple\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Product Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Code\",\r\n            inputType: \"text\",\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Product Image(s)\",\r\n            inputType: \"multipleImage\",\r\n            name: \"imageUrl\"\r\n        },\r\n        {\r\n            lableName: \"Product Description\",\r\n            inputType: \"textarea\",\r\n            name: \"description\"\r\n        },\r\n        {\r\n            lableName: \"Product Unit\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"unit.name\",\r\n            reffEntity: \"Unit\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Product Price\",\r\n            inputType: \"number\",\r\n            name: \"price\"\r\n        },\r\n        {\r\n            lableName: \"Product Category\",\r\n            inputType: \"dynamicDropdown\",\r\n            name: \"category.name\",\r\n            reffEntity: \"Category\",\r\n            idField: \"id\",\r\n            displayField: \"name\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nexport const supplierList = {\r\n    title: \"Supplier\",\r\n    entityName: \"supplier\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"name\" }, { name: \"address\" }, { name: \"contact\" }, { name: \"website\", type: \"link\" },\r\n        { name: \"iconUrl\", type: \"image\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Supplier Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Address\",\r\n            inputType: \"textarea\",\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Contact\",\r\n            inputType: \"text\",\r\n            name: \"contact\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Icon\",\r\n            inputType: \"singleImage\",\r\n            name: \"iconUrl\"\r\n        },\r\n        {\r\n            lableName: \"Supplier Website\",\r\n            inputType: \"text\",\r\n            name: \"website\"\r\n        }\r\n    ]\r\n}\r\nexport const customerList = {\r\n    title: \"Customer\",\r\n    entityName: \"customer\",\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"username\" }, { name: \"name\" }, { name: \"address\" }, { name: \"phone\" }, { name: \"email\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Customer Unique Name\",\r\n            inputType: \"text\",\r\n            name: \"username\"\r\n        },\r\n        {\r\n            lableName: \"Customer Name\",\r\n            inputType: \"text\",\r\n            name: \"name\"\r\n        },\r\n        {\r\n            lableName: \"Customer Address\",\r\n            inputType: \"textarea\",\r\n            name: \"address\"\r\n        },\r\n        {\r\n            lableName: \"Customer Phone\",\r\n            inputType: \"text\",\r\n            name: \"phone\"\r\n        },\r\n        {\r\n            lableName: \"Customer Email\",\r\n            inputType: \"email\",\r\n            name: \"email\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const transactionConfig = {\r\n    title: \"Transaction\",\r\n    entityName: \"transaction\",\r\n    disabled: true,\r\n    id: \"id\",\r\n    fieldNames: [\r\n        { name: \"code\" }, { name: \"transactionDate\", type: \"longDate\" },\r\n        { name: \"type\" }, { name: \"supplier.name\" },\r\n        { name: \"customer.name\" }\r\n    ],\r\n    formData: [\r\n        {\r\n            lableName: \"Transaction Code\",\r\n            inputType: \"text\",\r\n            name: \"code\"\r\n        },\r\n        {\r\n            lableName: \"Date\",\r\n            inputType: \"text\",\r\n            name: \"transactionDate\"\r\n        },\r\n        {\r\n            lableName: \"Transaction Type\",\r\n            inputType: \"text\",\r\n            name: \"type\"\r\n        },\r\n        {\r\n            lableName: \"Supplier\",\r\n            inputType: \"text\",\r\n            name: \"supplier.name\"\r\n        },\r\n        {\r\n            lableName: \"Customer\",\r\n            inputType: \"text\",\r\n            name: \"customer.name\",\r\n        },\r\n\r\n    ]\r\n}","import React, { Component } from 'react'\r\n\r\nimport '../../css/Input.css'\r\n\r\nclass DropdownItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: false\r\n        }\r\n\r\n        this.onHover = (e) => {\r\n            if(this.props.onHover)\r\n                this.props.onHover( this.props.index);\r\n        }\r\n        this.unHover = (e) => { \r\n            this.setState({ hover: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n          return (\r\n            <div onMouseLeave={this.unHover} onMouseOver ={this.onHover}  >\r\n                {this.props.text}</div>\r\n        )\r\n    }\r\n}\r\nexport default DropdownItem;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Input.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport DropdownItem from './DropdownItem';\r\n/**\r\n * JUST FOR INPUT !!!\r\n */\r\nclass InputDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            focus: true, hover: false, hoverIndex: -1,\r\n\r\n        }\r\n\r\n        this.handleKeyup = () => {\r\n            if (this.props.onKeyUp && this.props.id)\r\n                this.props.onKeyUp(document.getElementById(this.props.id).value, this.props.id);\r\n        }\r\n\r\n        this.onBlur = () => {\r\n            console.log(\"blur\");\r\n            this.setState({ focus: false, hover: false })\r\n        }\r\n\r\n        this.onSelect = (dataValue, text) => {\r\n            console.log(\"select value:\", dataValue);\r\n            if (this.props.onSelect) { this.props.onSelect(dataValue); }\r\n            if (this.props.id) {\r\n                document.getElementById(this.props.id).value = text;\r\n            }\r\n        }\r\n\r\n        this.onHover = (i) => {\r\n            if (this.state.hoverIndex != i)\r\n                this.setState({ hoverIndex: i });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.value && this.props.id) {\r\n            document.getElementById(this.props.id).value = this.props.value;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let dropdownList = [];\r\n        let dropdownComponent = \"\";\r\n        if (this.state.focus && this.props.dropdownList && this.props.dropdownList.length > 0) {\r\n            dropdownList = this.props.dropdownList;\r\n            // console.log(\"RENDERD HOVER:\", this.state.hoverIndex);\r\n            dropdownComponent = <div className=\"dropdown\">\r\n                {dropdownList.map(\r\n                    (data, i) => {\r\n                        let className = \"dropdown-item\";\r\n                        if (this.state.hoverIndex == i) className = \"dropdown-item-hovered\";\r\n                        return (\r\n                            <div\r\n                                id={stringUtil.uniqueId()}\r\n                                key={\"dropdown-xx-\" + stringUtil.uniqueId()}\r\n                                onClick={() => this.onSelect(data.value, data.text)}\r\n                                className={className}>\r\n                                <DropdownItem onHover={this.onHover} index={i} text={data.text} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        }\r\n\r\n        let placeholder = this.props.placeholder ? this.props.placeholder : \"\";\r\n        let inputClassName = \"rounded\";\r\n        return (\r\n            <div\r\n                onMouseOver={() => this.setState({ focus: true })}\r\n                onMouseLeave={this.onBlur}\r\n                className=\"dropdown-wrapper input-field\">\r\n                <input\r\n                    className={inputClassName}\r\n                    onFocus={() => this.setState({ focus: true })}\r\n                    id={this.props.id}\r\n                    type=\"text\"\r\n                    onKeyUp={this.handleKeyup}\r\n                    placeholder={placeholder} />\r\n                {dropdownComponent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default InputDropdown;","import React, { Component } from 'react'\r\nimport '../../css/Input.css'\r\nimport '../../css/Common.css'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport * as url from '../../constant/Url'\r\nimport ActionButton from '../buttons/ActionButton'\r\n\r\nclass InputFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            base64Data: null\r\n        }\r\n\r\n        this.onChange = (e) => {\r\n            componentUtil.toBase64(e.target, this, function (result, referer) {\r\n                referer.setState({ base64Data: result });\r\n\r\n            });\r\n        }\r\n\r\n        this.removeImage = () => {\r\n            if(this.props.removeImage){\r\n                this.props.removeImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.state.base64Data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let displayImage = null;\r\n        if (this.state.base64Data) {\r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.state.base64Data} width=\"60\" height=\"60\" />\r\n            </div>;\r\n        }\r\n        if (this.props.value && this.props.value.trim() != \"\") {\r\n            \r\n            displayImage = <div className=\"input-image-wrapper\">\r\n                <img src={this.props.value} width=\"60\" height=\"60\" />\r\n                <ActionButton text=\"cancel\" status=\"danger\" onClick={this.removeImage} />\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-field\" >\r\n                <input accept=\"image/*\" onChange={this.onChange} type=\"file\" key={\"input_file_\" + stringUtil.uniqueId()} />\r\n                {displayImage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as url from '../../constant/Url'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport InputFile from './InputFile';\r\nimport ActionButton from '../buttons/ActionButton';\r\n\r\nclass InputFileMultiple extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddMoreFile = () => {\r\n            if(this.props.addMoreImage){\r\n                this.props.addMoreImage();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        let inputFields = [];\r\n        if (this.props.inputFilesData) {\r\n            inputFields = this.props.inputFilesData;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {inputFields.map(\r\n                    inputFileData => {\r\n                        let value = inputFileData.value;\r\n                        return (\r\n                            <InputFile\r\n                                key={stringUtil.uniqueId() + \"_multiple_file_item\"}\r\n                                onChange={(base64) => {\r\n                                    if (inputFileData.onChange)\r\n                                        inputFileData.onChange(base64)\r\n                                }}\r\n                                value={value && value.includes(\"base64\") ? value : value ?\r\n                                    url.baseImageUrl + value : null}\r\n                                id={inputFileData.inputId}\r\n                                removeImage={() => {\r\n                                    if (inputFileData.removeImage)\r\n                                        inputFileData.removeImage()\r\n                                }\r\n                                }\r\n\r\n                            />\r\n                        )\r\n                    }\r\n                )}\r\n                <ActionButton text=\"add more\" onClick={this.handleAddMoreFile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputFileMultiple;","import React, { Component } from 'react'\r\nimport '../../css/Entity.css'\r\nimport '../../css/Common.css'\r\nimport Label from '../Label'\r\nimport InputDropdown from '../input/InputDropdown'\r\nimport ComboBox from '../input/ComboBox'\r\nimport InputField from '../input/InputField';\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport InputFile from '../input/InputFile'\r\nimport * as url from '../../constant/Url'\r\nimport InputFileMultiple from '../input/InputFileMultiple'\r\n\r\nclass EntityForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            managedEntity: null,\r\n            activeId: null,\r\n            formValues: {},\r\n            dropdownList: {},\r\n            dropdownValues: {},\r\n            selectedEntities: {},\r\n            base64Data: {},\r\n            base64DataMultiple: {},\r\n            updated: new Date()\r\n        }\r\n\r\n        /**\r\n         * valudate before submit\r\n         */\r\n        this.validateEntity = (entity) => {\r\n            const result = entity;\r\n            for (let key in entity) {\r\n                console.log(key);\r\n                const formDataItem = this.getFormDataItemStartWith(key);\r\n                if (formDataItem) {\r\n                    if (formDataItem.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle single Image\r\n                         */\r\n                        if (entity[key] && !entity[key].includes(\"base64\")) {\r\n                            result[key] = null;\r\n                        }\r\n                    } else if (formDataItem.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle MULTIPLE Image\r\n                         */\r\n\r\n                        if (entity[key]) {\r\n                            let arrayOfValues = entity[key].split(\"~\");\r\n                            let resultValue = new Array();\r\n                            for (let i = 0; i < arrayOfValues.length; i++) {\r\n                                const element = arrayOfValues[i];\r\n                                /**\r\n                                 * if not modified\r\n                                 */\r\n                                if (!this.state.base64DataMultiple[key] ||\r\n                                    !this.state.base64DataMultiple[key][i]) {\r\n                                    resultValue.push(\"{ORIGINAL>>\" + element + \"}\");\r\n                                } else\r\n                                    /**\r\n                                     * if modified\r\n                                     */\r\n                                    if (this.state.base64DataMultiple[key] &&\r\n                                        this.state.base64DataMultiple[key][i]) {\r\n                                        const updatedValue = this.state.base64DataMultiple[key][i];\r\n                                        resultValue.push(\"{ORIGINAL>>\" + element + \"}\" + updatedValue);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if (this.state.base64DataMultiple[key] && this.state.base64DataMultiple[key].length > arrayOfValues.length) {\r\n                                for (let i = arrayOfValues.length - 1; i < this.state.base64DataMultiple[key].length; i++) {\r\n                                    const element = this.state.base64DataMultiple[key][i];\r\n                                    if (element && element.includes(\"base64\")) {\r\n                                        resultValue.push(element);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (resultValue.length > 0)\r\n                                result[key] = resultValue.join(\"~\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.setState({ updated: new Date() })\r\n        }\r\n\r\n        this.handleSubmit = () => {\r\n            const updateMode = this.props.managedEntity != null;\r\n            if (updateMode) {\r\n                console.log(\"WILL UPDATE(props):\", this.props.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.props.managedEntity), \"update\");\r\n                }\r\n            }\r\n\r\n            const addNewMod = this.state.managedEntity != null;\r\n            if (addNewMod) {\r\n                console.log(\"WILL SUBMIT NEW(state):\", this.state.managedEntity);\r\n                if (this.props.updateEntity) {\r\n                    this.props.updateEntity(this.props.entityConfig.entityName,\r\n                        this.validateEntity(this.state.managedEntity), \"addNew\");\r\n                }\r\n            }\r\n            this.clear();\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n        this.onKeyUp = (value, id, propName) => {\r\n            this.setState({ activeId: id });\r\n            this.updateSelectedEntity(propName, value);\r\n\r\n        }\r\n\r\n        this.clear = () => {\r\n            this.setState({\r\n                managedEntity: null,\r\n                dropdownList: {},\r\n                dropdownValues: {},\r\n                selectedEntities: {},\r\n                base64Data: {},\r\n                base64DataMultiple: {}\r\n            });\r\n            if (this.props.removeManagedEntity) {\r\n                this.props.removeManagedEntity();\r\n            }\r\n        }\r\n\r\n        this.populateDropdown = (entityname, fieldname, fieldvalue) => {\r\n            const request = {\r\n                entityName: entityname,\r\n                fieldName: fieldname.split(\".\")[1],\r\n                fieldValue: fieldvalue\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"DATA FOR DROPDOWN: \", data);\r\n            });\r\n\r\n        }\r\n\r\n        this.onKeyUpDynamicDropdown = (value, id, propName, reffEntity) => {\r\n            if (value == null || value.trim() == \"\") { return; }\r\n            const request = {\r\n                entityName: reffEntity,\r\n                fieldName: 'name',\r\n                fieldValue: value\r\n            }\r\n            this.props.getEntitiesWithCallback(request, this, function (data, referer) {\r\n                console.log(\"LIST FOR DROPDOWN: \", data.entities)\r\n                referer.populateDropdownValues(data.entities, propName);\r\n            });\r\n            let currentDropdownValue = this.state.dropdownValues;\r\n            currentDropdownValue[propName] = value;\r\n            this.setState({ activeId: id, dropdownValues: currentDropdownValue });\r\n        }\r\n\r\n        this.populateDropdownValues = (entities, propName) => {\r\n            console.log(\"ENTITIES:\", entities)\r\n            let options = new Array();\r\n            const formDataItem = this.getFormDataItem(propName);\r\n            if (null == formDataItem) {\r\n                console.log(\"FORM DATA NOT FOUND\");\r\n                return;\r\n            }\r\n\r\n            for (let i = 0; i < entities.length; i++) {\r\n                const entity = entities[i];\r\n                options.push({\r\n                    value: entity[formDataItem.idField],\r\n                    text: entity[formDataItem.displayField],\r\n                    entity: entity\r\n                })\r\n            }\r\n            let currentDropdownList = this.state.dropdownList;\r\n            currentDropdownList[propName] = options;\r\n            //  this.setState({ dropdownList: currentDropdownList })\r\n            return options;\r\n        }\r\n\r\n        this.getSelectedDropdownItem = (value, propName) => {\r\n            if (this.state.dropdownList[propName] == null) {\r\n                return null;\r\n            }\r\n            const dropdownList = this.state.dropdownList[propName];\r\n            for (let i = 0; i < dropdownList.length; i++) {\r\n                const option = dropdownList[i];\r\n                if (option.value == value) {\r\n                    return option;\r\n                }\r\n\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.getFormDataItem = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.addMoreImage = (propName) => {\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    currentValue = currentValue.trim() + \"~DEFAULT.BMP\";\r\n                    this.updateSelectedEntity(propName, currentValue);\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                let currentValue;\r\n                if (!managedEntity) {\r\n                    managedEntity = {};\r\n                    currentValue = \"\";\r\n                } else\r\n                    currentValue = managedEntity[propName] + \"~\";\r\n                currentValue = currentValue.trim() + \"DEFAULT.BMP\";\r\n                this.updateSelectedEntity(propName, currentValue);\r\n            }\r\n        }\r\n\r\n        this.updateSelectedEntity = (propName, value) => {\r\n            if (this.props.managedEntity) {\r\n                this.props.managedEntity[propName] = value;\r\n                this.refresh();\r\n            } else {\r\n                let managedEntity = this.state.managedEntity;\r\n                if (!managedEntity) managedEntity = {};\r\n                managedEntity[propName] = value;\r\n                this.setState({ managedEntity: managedEntity });\r\n            }\r\n\r\n        }\r\n\r\n        this.getFormDataItemStartWith = (propName) => {\r\n            if (this.props.entityConfig && this.props.entityConfig.formData) {\r\n                const formDataList = this.props.entityConfig.formData;\r\n                for (let i = 0; i < formDataList.length; i++) {\r\n                    const formDataItem = formDataList[i];\r\n                    if (formDataItem.name == propName) {\r\n                        return formDataItem;\r\n                    }\r\n                    if (formDataItem.name.split(\".\").length > 1) {\r\n                        if (formDataItem.name.split(\".\")[0] == propName) {\r\n                            return formDataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.handleRemoveImage = (propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = null;\r\n\r\n            this.updateSelectedEntity(propName, null);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64Image = (base64, propName) => {\r\n\r\n            let base64Data = this.state.base64Data;\r\n            base64Data[propName] = base64;\r\n\r\n            this.updateSelectedEntity(propName, base64);\r\n            this.setState({ base64Data: base64Data });\r\n        }\r\n\r\n        this.handleChangeBase64MultipleImage = function (base64, propNameRaw, i) {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = base64;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n\r\n        }\r\n\r\n        this.removeElementAtPosition = (array, index) => {\r\n            let result = new Array();\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (i != index) {\r\n                    result.push(array[i])\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        this.handleRemoveMultipleImage = (propNameRaw, i) => {\r\n            let base64DataMultiple = this.state.base64DataMultiple;\r\n            const propName = propNameRaw.split(\".\")[0];\r\n            if (!base64DataMultiple[propName]) {\r\n                base64DataMultiple[propName] = new Array();\r\n            }\r\n            base64DataMultiple[propName][i] = null;\r\n\r\n            this.setState({ base64DataMultiple: base64DataMultiple });\r\n            if (this.props.managedEntity) {\r\n                let currentValue = this.props.managedEntity[propName];\r\n                if (currentValue) {\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n                }\r\n            } else {\r\n                let managedEntity = this.state.managedEntity; \r\n                if (!managedEntity) {\r\n                    return;\r\n                }\r\n                let currentValue = managedEntity[propName];\r\n                if(currentValue){\r\n                    let newArrayValue = this.removeElementAtPosition(currentValue.split(\"~\"), i);\r\n                    this.updateSelectedEntity(propName, newArrayValue.join(\"~\"));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectFromDynamicDropdown = (value, propName) => {\r\n            console.log(propName, \":\", value);\r\n            const currentDropdownList = this.state.dropdownList;\r\n            const dropdownValues = this.state.dropdownValues;\r\n            const selectedEntities = this.state.selectedEntities;\r\n\r\n            const selectedOption = this.getSelectedDropdownItem(value, propName);\r\n            if (null == selectedOption) {\r\n                return;\r\n            }\r\n\r\n            dropdownValues[propName] = selectedOption.text;\r\n            currentDropdownList[propName] = [];\r\n            selectedEntities[propName] = selectedOption.entity;\r\n\r\n            /**\r\n             * time to modify entity\r\n             */\r\n            const displayPropName = propName.split(\".\")[0];\r\n\r\n            this.updateSelectedEntity(displayPropName, selectedOption.entity);\r\n            this.setState({ activeId: null, dropdownList: currentDropdownList, dropdownValues: dropdownValues, selectedEntities: selectedEntities });\r\n        }\r\n\r\n        this.handleStaticDropdownChange = (value, propName) =>{\r\n            this.updateSelectedEntity(propName, value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        let formData = this.props.entityConfig && this.props.entityConfig.formData ? this.props.entityConfig.formData : [];\r\n\r\n        const entityExist = this.props.managedEntity != null || this.state.managedEntity;\r\n\r\n\r\n        let actionButtons = null;\r\n        if(!this.props.entityConfig.disabled){\r\n            actionButtons  =   <ActionButtons buttonsData={[\r\n                {\r\n                    text: this.props.managedEntity ? \"Update\" : \"Add Record\",\r\n                    onClick: this.handleSubmit,\r\n                    status:\"success\"\r\n                },\r\n                {\r\n                    text: \"Clear\",\r\n                    status:\"warning\",\r\n                    onClick: this.clear\r\n                }\r\n            ]} />;\r\n        }\r\n\r\n        let formFields = <div className=\"entity-form  \">\r\n            {formData.map(\r\n                data => {\r\n                    const parentPropName = data.name.split(\".\")[0];\r\n                    let value = null;\r\n                    if (entityExist) {\r\n                        const entity = this.props.managedEntity ? this.props.managedEntity : this.state.managedEntity;\r\n                        const propName = data.name;\r\n\r\n                        if (propName.split(\".\").length > 1 && this.state.activeId != \"input-for-\" + data.name) {\r\n                            const valueAsObject = entity[propName.split(\".\")[0]];\r\n                            const objectPropName = propName.split(\".\")[1];\r\n\r\n                            value = valueAsObject ? valueAsObject[objectPropName] : null;\r\n                        } else {\r\n                            value = entity[propName];\r\n                        }\r\n                    }\r\n\r\n                    let inputComponent = null;\r\n                    const inputId = \"input-for-\" + data.name;\r\n\r\n                    if (data.inputType == \"dynamicDropdown\") {\r\n                        /**\r\n                         * if dynamic dropDown\r\n                         */\r\n\r\n                        if (null == value) {\r\n                            value = this.state.dropdownValues[data.name]\r\n                        }\r\n\r\n                        inputComponent = <InputDropdown\r\n                            onSelect={(value) => this.selectFromDynamicDropdown(value, data.name)}\r\n                            id={inputId}\r\n                            placeholder={data.lableName}\r\n                            value={value}\r\n                            dropdownList={this.state.dropdownList[data.name]}\r\n                            onKeyUp={(value, id) => { this.onKeyUpDynamicDropdown(value, id, data.name, data.reffEntity) }} />\r\n\r\n                    } else  if (data.inputType == \"staticDropDown\") {\r\n                        /**\r\n                         * if static drop down\r\n                         */\r\n                        console.log(\"STATIC DROPDOWN VALUE: \",value);\r\n                        inputComponent = <ComboBox \r\n                             defaultValue={new String(value)}\r\n                            onChange={(val)=>this.handleStaticDropdownChange(val,data.name)}\r\n                            options={data.options} id={stringUtil.uniqueId()}\r\n                         />\r\n\r\n                    } else if (data.inputType == \"singleImage\") {\r\n                        /**\r\n                         * handle image single\r\n                         */\r\n                        inputComponent = <InputFile\r\n                            onChange={(base64) => this.handleChangeBase64Image(base64, data.name)}\r\n                            value={value && value.includes(\"base64\") ? value : value ? url.baseImageUrl + value : null}\r\n                            id={inputId}\r\n                            removeImage={() => this.handleRemoveImage(data.name)}\r\n\r\n                        />\r\n\r\n                    } else if (data.inputType == \"multipleImage\") {\r\n                        /**\r\n                         * handle multiple single\r\n                         */\r\n                        let valueSplit = value ? value.split(\"~\") : [];\r\n\r\n                        let imagesData = new Array();\r\n                        for (let i = 0; i < valueSplit.length; i++) {\r\n                            let valueSplitItem = valueSplit[i];\r\n                            if (this.state.base64DataMultiple[parentPropName] &&\r\n                                this.state.base64DataMultiple[parentPropName][i]\r\n                                && this.state.base64DataMultiple[parentPropName][i].includes(\"base64\")) {\r\n                                valueSplitItem = this.state.base64DataMultiple[parentPropName][i];\r\n                            }\r\n                            imagesData.push({\r\n                                value: valueSplitItem,\r\n                                onChange: (base64) => {\r\n                                    this.handleChangeBase64MultipleImage(base64, data.name, i);\r\n                                },\r\n                                removeImage: () => this.handleRemoveMultipleImage(data.name, i)\r\n\r\n                            })\r\n                        }\r\n                        inputComponent = <InputFileMultiple\r\n                            addMoreImage={() => this.addMoreImage(data.name)}\r\n                            inputFilesData={imagesData}\r\n\r\n                        />\r\n                    }\r\n\r\n                    else {\r\n                        /**\r\n                         * regular\r\n                         */\r\n                        inputComponent = <InputField\r\n                            onKeyUp={(value, id) => { this.onKeyUp(value, id, data.name) }}\r\n                            id={inputId} value={value}\r\n                            type={data.inputType} placeholder={data.lableName} />;\r\n                    }\r\n\r\n                    return (\r\n                        <div key={\"FORM-FIELD-\" + stringUtil.uniqueId()}>\r\n                            <Label text={data.lableName} />\r\n                            {inputComponent}\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n\r\n            {actionButtons}                \r\n        </div>\r\n\r\n        return (\r\n            <div className=\"entity-form-wrapper\">\r\n                {formFields}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntitiesWithCallback: (request, referer, callback) => dispatch(actions.getEntitiesWithCallback(request, referer, callback)),\r\n\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EntityForm))","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport InstantTable from '../layout/InstantTable'\r\nimport { _byId } from '../../utils/ComponentUtil'\r\nimport * as stringUtil from '../../utils/StringUtil'\r\nimport '../../css/Management.css'\r\nimport '../../css/Entity.css'\r\nimport * as componentUtil from '../../utils/ComponentUtil'\r\nimport ActionButtons from '../buttons/ActionButtons';\r\nimport InputField from '../input/InputField'\r\nimport ActionButton from '../buttons/ActionButton'\r\nimport EntityForm from './EntityForm';\r\nimport * as url from '../../constant/Url'\r\nimport Label from '../Label'\r\nimport GridComponent from '../layout/GridComponent'\r\n\r\nclass EntityList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: {},\r\n            activeId: null,\r\n            orderBy: null,\r\n            orderType: null\r\n        }\r\n\r\n        this.handleDelete = (id) => {\r\n            if (!window.confirm(\"Are your sure for deleting this entity?\")) { return; }\r\n            console.log(\"Will DELETE: \", id)\r\n        }\r\n        this.handleEdit = (id) => {\r\n            this.getEntityById(id);\r\n        }\r\n        this.getHeaderNames = (fieldNames) => {\r\n            const headers = [];\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const name = fieldNames[i];\r\n                let headerName = name.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n                headers.push(headerName.toUpperCase());\r\n            }\r\n            headers.push(\"OPTION\");\r\n            return headers;\r\n        }\r\n\r\n        this.goToPage = (page, orderObject) => {\r\n            if (page > this.props.entitiesData.totalData / 10) {\r\n                page = 0;\r\n            }\r\n            if (page < 0) {\r\n                page = Math.ceil(this.props.entitiesData.totalData / 10 - 1);\r\n            }\r\n\r\n            let config = this.props.entityConfig;\r\n            config.filter = this.state.filter;\r\n            if (orderObject != null) {\r\n                config.orderBy = orderObject.orderBy;\r\n                config.orderType = orderObject.orderType;\r\n                this.setState({ orderBy: orderObject.orderBy, orderType: orderObject.orderType });\r\n            }\r\n\r\n            this.props.getEntityInPage(config, page);\r\n\r\n        }\r\n\r\n        this.getEntityById = (id) => {\r\n            const config = this.props.entityConfig;\r\n            if (config == null) {\r\n                alert(\"Config Not Found!\");\r\n                return;\r\n            }\r\n\r\n            this.props.getEntityById(config.entityName, id);\r\n        }\r\n\r\n        this.createNavButtons = () => {\r\n            let displayedButtons = componentUtil.createNavButtons(this.props.entitiesData.totalData / 10, this.props.currentPage);\r\n            return displayedButtons;\r\n        }\r\n\r\n        this.setOrderBy = (fieldName, orderType) => {\r\n            this.goToPage(this.props.currentPage, { orderBy: fieldName, orderType: orderType });\r\n        }\r\n\r\n        this.createFilterInputs = (fieldNames) => {\r\n            let inputs = new Array();\r\n            for (let i = 0; i < fieldNames.length; i++) {\r\n                const fieldName = fieldNames[i];\r\n                let headerName = fieldName.name;\r\n                if (headerName.split(\".\").length > 1) {\r\n                    headerName = headerName.split(\".\")[0];\r\n                }\r\n\r\n                let value = \"\";\r\n                \r\n                if (this.state.filter[headerName] != null) {\r\n                    value = this.state.filter[headerName];\r\n                    \r\n                }\r\n\r\n                let input = <InputField value={value} id={headerName + \"_filter_id\"}\r\n                    onKeyUp={this.handleFilterChange} key={\"input_field_\" + stringUtil.uniqueId()}\r\n                    placeholder={headerName} />\r\n\r\n                if (fieldName.type == \"date\") {\r\n                    const valueDay = this.state.filter[headerName + \"-day\"];\r\n                    const valueMonth = this.state.filter[headerName + \"-month\"];\r\n                    const valueYear = this.state.filter[headerName + \"-year\"];\r\n\r\n                    const inputDay = <InputField value={valueDay} id={headerName + \"-day_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_d\" + stringUtil.uniqueId()}\r\n                        placeholder={\"day\"} />;\r\n                    const inputMonth = <InputField value={valueMonth} id={headerName + \"-month_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_m\" + stringUtil.uniqueId()}\r\n                        placeholder={\"month\"} />;\r\n                    const inputYear = <InputField value={valueYear} id={headerName + \"-year_filter_id\"}\r\n                        onKeyUp={this.handleFilterChange} key={\"input_field_y\" + stringUtil.uniqueId()}\r\n                        placeholder={\"year\"} />;\r\n\r\n                    input = <GridComponent width=\"50px\" items={[inputDay, inputMonth, inputYear]} />\r\n                }\r\n\r\n\r\n                let orderType = \"asc\";\r\n                if (this.state.orderBy && this.state.orderBy == headerName) {\r\n                    if (this.state.orderType == \"asc\") {\r\n                        orderType = \"desc\";\r\n                    }\r\n                }\r\n\r\n\r\n                const orderButton = <ActionButton\r\n                    onClick={() => { this.setOrderBy(headerName, orderType) }}\r\n                    text={orderType} />\r\n\r\n                inputs.push(<div className=\"filter-wrapper\">\r\n                    {input}{orderButton}\r\n                </div>);\r\n            }\r\n            inputs.push(\"\");\r\n            return inputs;\r\n        }\r\n\r\n        this.handleFilterChange = (value, id) => {\r\n\r\n            let filter = this.state.filter;\r\n            if (value != null && value.trim() == \"\") {\r\n                filter[id.split(\"_filter_id\")[0]] = null;\r\n\r\n            } else {\r\n                filter[id.split(\"_filter_id\")[0]] = value;\r\n\r\n            }\r\n\r\n            this.setState({ filter: filter, activeId: id });\r\n            this.goToPage(this.props.currentPage);\r\n        }\r\n\r\n        this.focusActiveId = () => {\r\n            if (_byId(this.state.activeId)) {\r\n                _byId(this.state.activeId).focus();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        this.focusActiveId();\r\n    }\r\n\r\n    render() {\r\n\r\n        const entitiesData = this.props.entitiesData;\r\n        const entityConfig = this.props.entityConfig;\r\n\r\n        if (null == entitiesData || null == entityConfig || null == entitiesData.entities) {\r\n            return (<h2>Entity Not Found</h2>)\r\n        }\r\n\r\n        const rows = [\r\n            //header\r\n            {\r\n                values: this.getHeaderNames(entityConfig.fieldNames),\r\n                disabled: true,\r\n                style: { textAlign: 'center', fontWeight: 'bold' }\r\n            },\r\n            //filter\r\n            {\r\n                values: this.createFilterInputs(entityConfig.fieldNames),\r\n                disabled: true\r\n            }\r\n        ];\r\n\r\n\r\n        const entities = this.props.entitiesData.entities;\r\n        const idField = entityConfig.id;\r\n\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            let rowValues = [];\r\n            for (let j = 0; j < entityConfig.fieldNames.length; j++) {\r\n                const fieldItem = entityConfig.fieldNames[j];\r\n                let entityProp = fieldItem.name;\r\n                let object = false\r\n\r\n                if (entityProp.split(\".\").length > 1) {\r\n                    entityProp = entityProp.split(\".\")[0];\r\n                    object = true;\r\n                }\r\n\r\n                let entityValue = entity[entityProp];\r\n                if (fieldItem.type) {\r\n                    if (fieldItem.type == \"number\") {\r\n                        entityValue = stringUtil.beautifyNominal(entityValue);\r\n                    } else if (fieldItem.type == \"link\") {\r\n                        entityValue = <a href={entityValue}><u>{entityValue}</u></a>\r\n                    } else if (fieldItem.type == \"image\") {\r\n                        entityValue = <img width=\"60\" height=\"60\" alt={url.baseImageUrl + entityValue} src={url.baseImageUrl + entityValue} />\r\n                    } else if (fieldItem.type == \"imageMultiple\") {\r\n                        let imgName = entityValue.split(\"~\")[0];\r\n\r\n                        entityValue = <img width=\"60\" height=\"60\" src={url.baseImageUrl + imgName} />\r\n                    } else if (fieldItem.type == \"longDate\") {\r\n                        const dateStr = new Date(entityValue).toDateString();\r\n                        entityValue = <Label text={dateStr} />;\r\n                    } else if (fieldItem.type == \"staticDropdown\") {\r\n                        const options = fieldItem.options;\r\n\r\n                        options.forEach(opt => {\r\n                            if (opt.value == entityValue) {\r\n                                entityValue = opt.text;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                rowValues.push(object && entityValue ? entityValue[fieldItem.name.split(\".\")[1]] : entityValue);\r\n            }\r\n\r\n            rows.push(\r\n                {\r\n                    identifier: entity[idField],\r\n                    values: rowValues,\r\n                    handleDelete: this.handleDelete,\r\n                    handleEdit: this.handleEdit,\r\n                    disabled: entityConfig.disabled == true ? true : false\r\n                }\r\n            )\r\n        }\r\n\r\n        const buttonsData = this.createNavButtons();\r\n        const fixButtonData = new Array();\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + -1) },\r\n            text: 'previous'\r\n        })\r\n\r\n        for (let i = 0; i < buttonsData.length; i++) {\r\n            buttonsData[i].onClick = () => { this.goToPage(buttonsData[i].value) }\r\n            if (buttonsData[i].value == this.props.currentPage) {\r\n                buttonsData[i].status = \" btn-active\";\r\n            }\r\n            buttonsData[i].text = buttonsData[i].text;\r\n\r\n\r\n            fixButtonData.push(buttonsData[i]);\r\n        }\r\n\r\n        fixButtonData.push({\r\n            onClick: () => { this.goToPage(this.props.currentPage + 1) },\r\n            text: 'next'\r\n        });\r\n\r\n        let navButtons = <ActionButtons style={{\r\n            backgroundColor: 'white',\r\n            paddingTop: '15px',\r\n            margin: '10px'\r\n        }} buttonsData={fixButtonData} />\r\n\r\n        let entityTable = <div className=\"entity-list-container\">\r\n\r\n            <InstantTable\r\n                style={{\r\n                    width: \"100%\",\r\n                    margin: \"5px\",\r\n                }}\r\n                rows={rows} />\r\n        </div>\r\n\r\n        return (\r\n            <div style={{ textAlign: 'center' }}>\r\n                <div className=\"entity-container\">\r\n                    <div style={{\r\n                        backgroundColor: 'white',\r\n                        margin: '10px'\r\n                    }} > </div>\r\n                    {navButtons}\r\n                    <div className=\"entityForm\">\r\n                        <EntityForm\r\n                            app={this.props.app}\r\n                            updateEntity={this.props.updateEntity}\r\n                            removeManagedEntity={this.props.removeManagedEntity}\r\n                            managedEntity={this.props.managedEntity}\r\n                            entityConfig={entityConfig} />\r\n                    </div>\r\n                    {entityTable}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EntityList;","import React, { Component } from 'react'\r\nimport '../../css/Common.css'\r\nimport '../../css/Management.css'\r\nimport { withRouter } from 'react-router';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport ContentTitle from '../layout/ContentTitle' \r\nimport * as entityConfig from '../../utils/EntityConfigurations'\r\nimport EntityList from './EntityList';\r\nimport Tab from '../buttons/Tab';\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            entityList: [],\r\n            currentPage: 0,\r\n            entityConfig: { name: \"\" }\r\n        }\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus != true) this.props.history.push(\"/login\");\r\n        }\r\n\r\n        this.refresh = () => {\r\n            this.getEntityInPage(this.state.entityConfig, this.state.currentPage);\r\n        }\r\n\r\n        this.loadEntityManagement = (config) => {\r\n            this.props.removeManagedEntity();\r\n            this.setState({ currentPage: 0, entityConfig: config });\r\n            this.props.getEntities({\r\n                entityName: config.entityName,\r\n                page: 0,\r\n                limit: 10,\r\n                entityConfig: config\r\n            }, this.props.app);\r\n        }\r\n\r\n        this.getEntityInPage = (config, page) => {\r\n            this.setState({ currentPage: page });\r\n\r\n            const request = {\r\n                entityName: config.entityName,\r\n                page: page,\r\n                limit: 10,\r\n                entityConfig: config,\r\n                fieldsFilter: config.filter,\r\n                orderBy: config.orderBy,\r\n                orderType: config.orderType,\r\n            };\r\n\r\n            console.log(\"REQUEST: \", request)\r\n\r\n            this.props.getEntities(request, this.props.app);\r\n        }\r\n\r\n        this.checkIfCurrentMenuName = (name) => {\r\n            return this.state.entityConfig.entityName == name || (this.props.entitiesData.entityConfig && this.props.entitiesData.entityConfig.entityName == name);\r\n        }\r\n\r\n        this.getButtonsData = () => {\r\n            return [\r\n                {\r\n                    text: \"Badan Pengurus\",\r\n                    active: this.checkIfCurrentMenuName(\"division\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.divisionConfig) }\r\n                },\r\n                {\r\n                    text: \"Divisi\",\r\n                    active: this.checkIfCurrentMenuName(\"section\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.sectionConfig) }\r\n                },\r\n                {\r\n                    text: \"Program Kerja\",\r\n                    active: this.checkIfCurrentMenuName(\"program\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.programConfig) }\r\n                },\r\n                {\r\n                    text: \"Kegiatan\",\r\n                    active: this.checkIfCurrentMenuName(\"event\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.eventConfig) }\r\n                },\r\n                {\r\n                    text: \"Posisi\",\r\n                    active: this.checkIfCurrentMenuName(\"position\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.positionConfig) }\r\n                },\r\n                {\r\n                    text: \"Anggota\",\r\n                    active: this.checkIfCurrentMenuName(\"member\"),\r\n                    onClick: () => { this.loadEntityManagement(entityConfig.memberConfig) }\r\n                }, \r\n                // {\r\n                //     active: this.checkIfCurrentMenuName(\"supplier\"),\r\n                //     text: \"Supplier\",\r\n                //     onClick: () => { this.loadEntityManagement(entityConfig.supplierList) }\r\n                // },\r\n                // {\r\n                //     active: this.checkIfCurrentMenuName(\"customer\"),\r\n                //     text: \"Customer\",\r\n                //     onClick: () => { this.loadEntityManagement(entityConfig.customerList) }\r\n                // },\r\n                // {\r\n                //     active: this.checkIfCurrentMenuName(\"transaction\"),\r\n                //     text: \"Transaction\",\r\n                //     onClick: () => { this.loadEntityManagement(entityConfig.transactionConfig) }\r\n                // }\r\n            ];\r\n        }\r\n\r\n        this.updateEntity = (name, entity, flag) => {\r\n            if (!window.confirm(\"Are you sure will update \" + name + \"?\")) {\r\n                return;\r\n            }\r\n\r\n            let newRecord = flag == \"addNew\";\r\n\r\n            this.props.updateEntity({ entityName: name, entity: entity, isNewRecord: newRecord }, this, function (ref) {\r\n                ref.callbackHandleUpdate();\r\n            });\r\n        }\r\n\r\n        this.getEntityById = (name, id) => {\r\n            this.props.getEntityById(name, id, this.props.app);\r\n        }\r\n        this.removeManagedEntity = () => {\r\n            this.props.removeManagedEntity();\r\n        }\r\n\r\n        this.callbackHandleUpdate = () => {\r\n            this.refresh();\r\n            this.removeManagedEntity();\r\n           \r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Management\";\r\n        this.props.setMenuCode(\"management\");\r\n    }\r\n\r\n    render() {\r\n\r\n        let entityList = this.props.entitiesData ? this.props.entitiesData.entities : [];\r\n        if (null == entityList) { entityList = []; }\r\n\r\n        let buttonsData = this.getButtonsData();\r\n\r\n        return (\r\n            <div className=\"section-container\">\r\n                <ContentTitle title={\"Management \" + (this.state.entityConfig.title ?\r\n                    this.state.entityConfig.title :\r\n                    this.props.entitiesData && this.props.entitiesData.entityConfig ?\r\n                        this.props.entitiesData.entityConfig.title : \"\")}\r\n                        \r\n                        description=\"manage master data\"/>\r\n                <div className=\"management-container\">\r\n                    <Tab tabsData={buttonsData} />\r\n                    <EntityList currentPage={this.state.currentPage}\r\n                        app={this.props.app}\r\n                        getEntityInPage={this.getEntityInPage}\r\n                        entityConfig={this.props.entitiesData.entityConfig}\r\n                        entitiesData={this.props.entitiesData}\r\n                        managedEntity={this.props.managedEntity}\r\n                        getEntityById={this.getEntityById}\r\n                        removeManagedEntity={this.removeManagedEntity}\r\n                        updateEntity={this.updateEntity}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        entitiesData: state.managementState.entitiesData,\r\n        managedEntity: state.managementState.managedEntity\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getEntities: (request, app) => dispatch(actions.getEntityList(request, app)),\r\n    getEntityById: (name, id, app) => {\r\n        let action = actions.getEntityById(name, id, app);\r\n        dispatch(action);\r\n    },\r\n    removeManagedEntity: () => dispatch(actions.removeManagedEntity()),\r\n    updateEntity: (request, referer, callback) => dispatch(actions.updateEntity(request, referer, callback))\r\n\r\n})\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Management))","\nimport React, { Component } from 'react'; \nimport './App.css';\n\nimport Header from './components/layout/Header'\nimport Menu from './components/buttons/Menu'\nimport Home from './components/pages/Home'\nimport About from './components/pages/About'\nimport {  Route, Link, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'  \nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\nimport * as menus from './constant/Menus'\nimport Message from './components/Message';\nimport Footer from './components/layout/Footer';\nimport SockJsClient from 'react-stomp';\nimport ChatRoom from './components/pages/ChatRoom';\nimport Management from './components/pages/Management'; \n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      detailMode: false,\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      enableShopping: false,\n      mainAppUpdated:new Date()\n    };\n\n    this.setDetailMode = (detailMode) => {\n      this.setState({ detailMode: detailMode });\n    }\n\n    this.setMenuCode = (code) => { \n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.setEnableShopping = (val) => {\n      this.setState({ enableShopping: val })\n    }\n\n    this.handleMenuCLick = (menu) => {\n      switch (menu.code) {\n\n        case menus.LOGOUT:\n          if (!window.confirm(\"Are you sure want to logout?\")) {\n            return;\n          }\n          this.props.performLogout(this);\n          break;\n\n        default:\n          break;\n      }\n\n\n    }\n\n\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n\n    this.startLoading = (realtime) => {\n      this.setState({ loading: true, realtime: realtime });\n    }\n    this.endLoading = () => {\n      this.setState({ loading: false, loadingPercentage: 0 });\n    }\n\n    this.handleMessage = (msg) => {\n      let percentage = Math.floor(msg.percentage);\n      if (msg.percentage < 0 || msg.percentage > 100) {\n        this.endLoading();\n      }\n      this.setState({ loadingPercentage: percentage });\n    }\n  }\n\n\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      localStorage.setItem(\"requestId\", this.props.requestId);\n      this.props.refreshLogin();\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    let additionalMenus = this.props.menus\n    let menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      let menu = additionalMenus[i];\n\n      if(!this.state.enableShopping && menu.code == 'cart')\n        continue;\n\n      if (this.props.loginStatus != true && menu.authenticated == true)\n        continue;\n\n      menus.push(menu);\n\n    }\n \n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.state.requestId) {\n      return (\n        <div>\n          Please wait..\n        </div>\n      )\n    }\n\n    let loginComponent = <Login main={this} setMenuCode={this.setMenuCode}\n      setDetailMode={this.setDetailMode}\n      detailMode={this.state.detailMode}\n      doLogin={this.props.performLogin}\n      loginFailed={this.props.loginFailed}\n      loginAttempt={this.props.loginAttempt}\n      loginStatus={this.props.loginStatus}\n    />;\n\n    let loadingComponent = \"\";\n    if (this.state.loading == true) {\n      loadingComponent = <Message realtime={this.state.realtime} progress={this.state.loadingPercentage} text=\"Please wait...\" type=\"loading\" />;\n    }\n\n    let menus = this.setMenus();\n \n    let cloudHost = \"https://nuswantoroshop.herokuapp.com/\";\n    let localHost = \"http://localhost:8080/universal-good-shop/\";\n    const usedHost = localHost;\n    return (\n      <div className=\"App\">\n        {loadingComponent}\n        <Header title=\"MPI Monitoring\" enableShopping={this.state.enableShopping} cart={this.props.cart} />\n        {/*this.props.loginStatus == true?\"Logged In\":\"Un Logged\"*/}\n      \n        <div id=\"main-layout\">\n          <div id=\"main-menu\">\n            <Menu loggedUser={this.props.loggedUser}\n              division = {this.props.division}\n              handleMenuCLick={this.handleMenuCLick}\n              activeCode={this.state.menuCode}\n              menus={menus} />\n          </div>\n         \n          <div id=\"main-content\" > \n            <Switch>\n              <Route exact path=\"/\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is default page\" />\n              } />\n              <Route exact path=\"/home\" render={\n                (renderProps) =>\n                  <Home setMenuCode={this.setMenuCode} content=\"hello, this is home page\" />\n              } />\n              \n              <Route exact path=\"/chatroom\" render={\n                (renderProps) =>\n                  <ChatRoom app={this} setMenuCode={this.setMenuCode} />\n              } />\n              <Route exact path=\"/about\" render={\n                (renderProps) =>\n                  <About setMenuCode={this.setMenuCode} />\n              }></Route>\n               \n               <Route exact path=\"/login\" render={\n                (renderProps) => loginComponent\n\n              }></Route>\n\n              {/*\n                     =============================\n                     ======== need login =========\n                     =============================\n                     */}\n              <Route exact path=\"/dashboard\" render={\n                (renderProps) =>\n                  <Dashboard app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n               <Route exact path=\"/management\" render={\n                (renderProps) =>\n                  <Management app={this} loginStatus={this.props.loginStatus} setMenuCode={this.setMenuCode} />\n\n              }></Route>\n            </Switch>\n           \n          </div>\n         \n        </div>\n        <SockJsClient url={usedHost+'shop-app'} topics={['/wsResp/progress']}\n          onMessage={(msg) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    entities: state.shopState.entities,\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    loginKey: state.userState.loginStatus,\n    loginFailed: state.userState.loginFailed,\n    menus: state.userState.menus,\n    loggedUser: state.userState.loggedUser,\n    loginAttempt: state.userState.loginAttempt,\n    requestId: state.userState.requestId,\n    division: state.userState.division,\n    cart: state.shopState.cart\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogin: (username, password, app) => dispatch(actions.performLogin(username, password, app)),\n  performLogout: (app) => dispatch(actions.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus())\n  // getProductCatalog: (page) => dispatch(actions.getProductList(page))\n\n})\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = {\r\n    catalogData: {},\r\n    entities: [],\r\n    entity: {},\r\n    categories: [],\r\n    suppliersData: [], \r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCT_LIST:\r\n            return { ...state, catalogData: action.payload };\r\n        case types.FETCH_PRODUCT_DETAIL:\r\n            return { ...state, entity: action.payload.entities[0] };\r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ };\r\n        case types.FETCH_SUPPLIER_LIST:\r\n            return { ...state, suppliersData: action.payload };\r\n        case types.RESET_SUPPLIERS:\r\n            return { ...state, suppliersData: {} };\r\n        case types.LOAD_MORE_SUPPLIER:\r\n            let currentProduct = state.entity;\r\n            let loadedSupplier = action.payload.entities;\r\n            for (let index = 0; index < loadedSupplier.length; index++) {\r\n                currentProduct.suppliers.push(loadedSupplier[index]);\r\n            }\r\n            console.info(\"additinal suppliers: \", currentProduct.suppliers);\r\n            action.referrer.refresh();\r\n            return { ...state, entity: currentProduct };\r\n        case types.FETCH_PRODUCT_CATEGORIES_ALL:\r\n            return { ...state, categories: action.payload.entities };\r\n      \r\n        case types.SEND_MESSAGE:\r\n            return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            if (action.payload.app) {\r\n                action.payload.app.refresh();\r\n            }\r\n            return { ...state, cart: action.payload.cart };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nexport const menus = [\r\n  {\r\n    code:\"home\",\r\n    name:\"Home\",\r\n    url:\"home\",\r\n    active: false,\r\n    authenticated: false\r\n  } ,\r\n  {\r\n    code:\"catalog\",\r\n    name:\"Catalog\",\r\n    url:\"catalog\",\r\n    active: false,\r\n     authenticated: false\r\n  } ,\r\n  {\r\n    code:\"about\",\r\n    name:\"About\",\r\n    url:\"about\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"chatroom\",\r\n    name:\"Chat Room\",\r\n    url:\"chatroom\",\r\n    active: false,\r\n    authenticated: false\r\n  } , \r\n  {\r\n    code:\"login\",\r\n    name:\"Login\",\r\n    url:\"login\",\r\n    active: false,\r\n    authenticated: false\r\n  }, \r\n  {\r\n    code:\"dashboard\",\r\n    name:\"Dashboard\",\r\n    url:\"dashboard\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"management\",\r\n    name:\"Management\",\r\n    url:\"management\",\r\n    active: false,\r\n    authenticated: true\r\n  }, \r\n  {\r\n    code:\"logout\",\r\n    name:\"Logout\",\r\n    url:\"#\",\r\n    active: false,\r\n    authenticated: true\r\n  }\r\n];\r\n","import * as types from './types'\r\nimport * as menus from '../utils/HardCodedEntites'\r\nimport * as menuCodes from '../constant/Menus'\r\nimport { initialState } from './reducers';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menus.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    divisions: null,\r\n    division: null,\r\n    requestId: null\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    let updatedMenus = new Array();\r\n    if (action.payload) {\r\n\r\n        let loggedIn = action.payload && action.payload.loginStatus == true;\r\n        for (let index = 0; index < menus.menus.length; index++) {\r\n            const menu = menus.menus[index];\r\n            if (loggedIn && menu.code == menuCodes.LOGIN) { continue; }\r\n\r\n            if (menu.authenticated == false) {\r\n                updatedMenus.push(menu);\r\n            } else {\r\n                if (loggedIn) { updatedMenus.push(menu); }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case types.DO_LOGIN:\r\n            let result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                localStorage.setItem(\"loginKey\", result.loginKey);\r\n                localStorage.setItem(\"loggedUser\", JSON.stringify(result.loggedUser));\r\n                result.divisions = action.payload.divisions\r\n            }\r\n\r\n            console.log(\"logged user: \", result.loggedUser);\r\n            return result;\r\n        case types.REQUEST_ID:\r\n            result = { ...state, requestId: action.payload.message };\r\n\r\n            if (!action.payload.loggedIn) {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }else{\r\n                if(action.payload.sessionData){\r\n                    result.division = action.payload.sessionData.Division\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                division:null,\r\n                loggedUser: null\r\n            };\r\n            localStorage.removeItem(\"loginKey\");\r\n            localStorage.removeItem(\"loggedUser\");\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                menus: updatedMenus,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            return result;\r\n        case types.GET_DIVISIONS:\r\n            result = {\r\n                ...state,\r\n                divisions: action.payload.divisions,\r\n            };\r\n            return result;\r\n        case types.SELECT_DIVISION:\r\n            result = {\r\n                ...state,\r\n                division: action.payload.entity,\r\n            };\r\n            return result;\r\n        default:\r\n            if (action.payload && action.payload.loginStatus != null)\r\n                return { ...state, menus: updatedMenus };\r\n            else {\r\n                return { ...state };\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nexport const initState = {\r\n    productFlowStock: null,\r\n    productFlowStocks: null,\r\n    transactionData: null,\r\n    successTransaction: false,\r\n    customersData: null,\r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n\r\n    switch (action.type) { \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    events: []\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_EVENTS_BY_DATE:\r\n            \r\n            if (action.payload.entities)\r\n                return { ...state, events: action.payload.entities };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\"\r\nimport * as managementReducer from \"./managementReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer,\r\n        managementState: managementReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState,\r\n    managementState: managementReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as actionCreator from './actionCreators';\r\nimport * as types from './types';\r\n\r\nconst commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\")\r\n    }\r\n};\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(\r\n            getProductListMiddleware,\r\n            getProductDetailMiddleWare,\r\n            removeEntityMiddleware,\r\n            loadMoreSupplierMiddleware,\r\n            getAllProductCategoriesMiddleware,\r\n            getSupplierListMiddleware,\r\n\r\n            //user related\r\n            performLoginMiddleware,\r\n            performLogoutMiddleware,\r\n            refreshLoginStatusMiddleware,\r\n            getDivisionsMiddleware,\r\n\r\n            //transaction  \r\n            resetPurchaseTransactionMiddleware,  \r\n            selectDivisionMiddleware,\r\n            getEventByDateMiddleware,\r\n            resetProductsMiddleware,\r\n            resetSuppliersMiddleware,\r\n            resetCustomersMiddleware,\r\n            getProductStocksMiddleware,\r\n            resetProductStocksMiddleware,\r\n            getProductSalesDetailMiddleware,\r\n            requestAppIdMiddleware,\r\n            sendChatMessageMiddleware,\r\n            storeChatMessageLocallyMiddleware,\r\n            getMessagesMiddleware,\r\n            updateCartMiddleware,\r\n\r\n            /*enntity management*/\r\n            getEntityListMiddleware,\r\n            getEntityByIdMiddleware,\r\n            updateEntityMiddleware,\r\n            removeManagedEntityMiddleware,\r\n\r\n            getEntitiesWithCallbackMiddleware\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\nconst getEntitiesWithCallbackMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_WITH_CALLBACK) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data = JSON.parse(data.d);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n\r\n            action.meta.callback(data, action.meta.referer);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data = JSON.parse(data.d);\r\n            console.debug(\"Response updateEntityMiddleware:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error Update Entity!\");\r\n                return;\r\n            }\r\n            alert(\"Update Success!\");\r\n            const callback = action.meta.callback;\r\n            const referer = action.meta.referer;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n            callback(referer);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityByIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY_BY_ID) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data = JSON.parse(data.d);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEntityListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_ENTITY) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            data = JSON.parse(data.d);\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                data.entitie = [];\r\n            }\r\n            data.entityConfig = action.meta.entityConfig;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst sendChatMessageMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SEND_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            data.username = action.payload.username;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst removeManagedEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_MANAGED_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = commonAuthorizedHeader(); \r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            data = JSON.parse(data.d);\r\n            console.debug(\"requestAppIdMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Error requesting app ID\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.error(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductStocksMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_STOCKS) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'requestId': localStorage.getItem(\"requestId\"),\r\n            'loginKey': localStorage.getItem(\"loginKey\")\r\n        }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getEventByDateMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Data not found\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getEventByDateMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_EVENTS_BY_DATE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = JSON.parse(data.d);\r\n\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst selectDivisionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SELECT_DIVISION) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = JSON.parse(data.d);\r\n\r\n            console.debug(\"selectDivisionMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getDivisionsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_DIVISIONS) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n\r\n            data = JSON.parse(data.d);\r\n\r\n            console.debug(\"getDivisionsMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            if (data.divisions == null) {\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductListTrxMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_LIST_TRX) { return next(action); }\r\n\r\n    if (action.payload.filter.fieldsFilter.name == null || action.payload.filter.fieldsFilter.name.trim() == \"\") {\r\n        let newAction = Object.assign({}, action, {\r\n            payload: { entities: [] }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    } else\r\n        fetch(action.meta.url, {\r\n            method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.debug(\"getProductListTrxMiddleware Response:\", data);\r\n                if (data.entities == null || data.entities.length == 0) {\r\n                    alert(\"Data not found!\");\r\n                    return;\r\n                }\r\n                let newAction = Object.assign({}, action, { payload: data });\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n            .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCustomerListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_CUSTOMER_LIST) { return next(action); }\r\n\r\n    if (action.payload.filter.fieldsFilter.name == null || action.payload.filter.fieldsFilter.name.trim() == \"\") {\r\n        let newAction = Object.assign({}, action, {\r\n            payload: { entities: [] }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    } else\r\n        fetch(action.meta.url, {\r\n            method: POST_METHOD,\r\n            body: JSON.stringify(action.payload),\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.debug(\"Response:\", data);\r\n                if (data.entities == null || data.entities.length == 0) {\r\n                    alert(\"Data not found!\");\r\n                    return;\r\n                }\r\n                let newAction = Object.assign({}, action, { payload: data });\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n            .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst resetProductStocksMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCT_STOCKS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetCustomersMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_CUSTOMERS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetProductsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCTS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\nconst resetSuppliersMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_SUPPLIERS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nconst resetPurchaseTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_TRX_PURCHASE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst submitSupplyTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SUBMIT_TRX_SUPPLY) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Transaction Failed!\");\r\n                return;\r\n            }\r\n            alert(\"Transaction Success!\")\r\n            data.transaction.productFlows = action.payload.productFlows;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nconst submitPurchaseTransactionMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SUBMIT_TRX_PURCHASE) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Transaction Failed!\");\r\n                return;\r\n            }\r\n            alert(\"Transaction Success!\")\r\n            data.transaction.productFlows = action.payload.productFlows;\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getStockInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_STOCK_INFO) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.productFlowStock == null) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data.productFlowStock\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getSupplierListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_SUPPLIER_LIST) { return next(action); }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: { 'Content-Type': 'application/json', 'requestId': localStorage.getItem(\"requestId\"), 'loginKey': localStorage.getItem(\"loginKey\") }\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            responseJson = JSON.parse(responseJson.d);\r\n\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            responseJson = JSON.parse(responseJson.d);\r\n\r\n            let loginKey = \"\";\r\n            let loginSuccess = false;\r\n\r\n            if (responseJson.code != null && responseJson.code == \"00\") {\r\n                for (var pair of response.headers.entries()) {\r\n                    if (pair[0] == \"loginkey\") {\r\n                        loginKey = pair[1];\r\n                        break;\r\n                    }\r\n                }\r\n               \r\n                loginSuccess = true;\r\n\r\n            }\r\n\r\n            console.log(\"LOGIN SUCCESS: \",loginSuccess);\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user,\r\n                    divisions: responseJson.divisions,\r\n                    division: responseJson.sessionData ? responseJson.sessionData.division : null\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}\r\n\r\nconst refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    }\r\n\r\n    let loggedUser = null;\r\n    if (localStorage.getItem(\"loggedUser\")) {\r\n        loggedUser = JSON.parse(localStorage.getItem(\"loggedUser\"));\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload: {\r\n            loginStatus: loggedUser ? true : false,\r\n            loginKey: localStorage.getItem(\"loginKey\"),\r\n            loggedUser: loggedUser\r\n        }\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst getAllProductCategoriesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_CATEGORIES_ALL) {\r\n        return next(action);\r\n    }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n}\r\n\r\nconst loadMoreSupplierMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.LOAD_MORE_SUPPLIER) {\r\n        return next(action);\r\n    }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data, referrer: action.meta.referrer\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(parap => action.meta.referrer.props.app.endLoading());\r\n\r\n}\r\n\r\nconst removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nconst getProductDetailMiddleWare = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_DETAIL) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(param => app.endLoading());\r\n}\r\n\r\nconst getProductListMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.FETCH_PRODUCT_LIST) {\r\n        return next(action);\r\n    }\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"Response:\", data);\r\n            if (data.entities == null || data.entities.length == 0) {\r\n                alert(\"Data not found!\");\r\n                return;\r\n            }\r\n            let newAction = Object.assign({}, action, {\r\n                payload: data\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}